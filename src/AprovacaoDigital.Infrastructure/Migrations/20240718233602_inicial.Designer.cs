// <auto-generated />
using System;
using AprovacaoDigital.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AprovacaoDigital.Infrastructure.Migrations
{
    [DbContext(typeof(DbprojsemurContext))]
    [Migration("20240718233602_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("pt_BR.UTF-8")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("advogado_advogadoid_seq");

            modelBuilder.HasSequence("agenda_agendaid_seq", "agenda");

            modelBuilder.HasSequence("analista_analistaid_seq", "agenda");

            modelBuilder.HasSequence("arquivo_arquivoid_seq");

            modelBuilder.HasSequence("arquivo_arquivoid_seq", "agenda");

            modelBuilder.HasSequence("arquivousuario_arquivousuarioid_seq");

            modelBuilder.HasSequence("aviso_avisoid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("documento_documentoid_seq", "agenda");

            modelBuilder.HasSequence("entidade_entidadeid_seq");

            modelBuilder.HasSequence("grupo_grupoid_seq");

            modelBuilder.HasSequence("grupousuario_grupousuarioid_seq");

            modelBuilder.HasSequence("hibernate_sequence", "auditoria");

            modelBuilder.HasSequence("local_localid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("logacesso_logacessoid_seq");

            modelBuilder.HasSequence("logsistema_logsistemaid_seq");

            modelBuilder.HasSequence("modulo_moduloid_seq");

            modelBuilder.HasSequence("modulogrupo_modulogrupoid_seq");

            modelBuilder.HasSequence("modulosistema_modulosistemaid_seq");

            modelBuilder.HasSequence("modulosistemausuario_modulosistemausuarioid_seq");

            modelBuilder.HasSequence("permissaoentidade_permissaoentidadeid_seq");

            modelBuilder.HasSequence("prfage_codprf_seq", "agenda")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("processo_processoid_seq");

            modelBuilder.HasSequence("processo_sequencia_seq");

            modelBuilder.HasSequence("projeto_projetoid_seq", "agenda");

            modelBuilder.HasSequence("relatorioid_seq", "divulgacao")
                .HasMax(99999999999999L);

            modelBuilder.HasSequence("remessa_remessaid_seq", "agenda");

            modelBuilder.HasSequence("sistema_sistemaid_seq");

            modelBuilder.HasSequence("situacao_situacaoid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("situacao_situacaoid_seq", "agenda")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tema_temaid_seq");

            modelBuilder.HasSequence("tipoarquivo_tipoarquivoid_seq", "agenda");

            modelBuilder.HasSequence("tipoprocesso_tipoprocessoid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tipounidade_tipounidadeid_seq");

            modelBuilder.HasSequence("tramiteinterno_tramiteinternoid_seq");

            modelBuilder.HasSequence("transportadoraresiduo_transportadoraresiduoid_seq", "residuos");

            modelBuilder.HasSequence("unidade_unidadeid_seq");

            modelBuilder.HasSequence("unidadeusuario_unidadeusuarioid_seq");

            modelBuilder.HasSequence("usuario_usuarioid_seq");

            modelBuilder.HasSequence("usuariosistema_usuariosistemaid_seq");

            modelBuilder.Entity("AprovacaoDigital.Domain.Entities.TesteOld", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TesteOld");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Analiseprojeto", b =>
                {
                    b.Property<int>("Analiseprojetoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("analiseprojetoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Analiseprojetoid"));

                    b.Property<int?>("Analista")
                        .HasColumnType("integer")
                        .HasColumnName("analista");

                    b.Property<int?>("Codificacao")
                        .HasColumnType("integer")
                        .HasColumnName("codificacao");

                    b.Property<string>("Datahora")
                        .HasColumnType("character varying")
                        .HasColumnName("datahora");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Numeroanalise")
                        .HasColumnType("integer")
                        .HasColumnName("numeroanalise");

                    b.Property<int?>("Numeroanalisereal")
                        .HasColumnType("integer")
                        .HasColumnName("numeroanalisereal");

                    b.Property<int?>("Projeto")
                        .HasColumnType("integer")
                        .HasColumnName("projeto");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Analiseprojetoid")
                        .HasName("analiseprojeto_pkey");

                    b.HasIndex("Analista");

                    b.HasIndex("Codificacao");

                    b.HasIndex("Projeto");

                    b.ToTable("analiseprojeto", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Analistum", b =>
                {
                    b.Property<int>("Analistaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("analistaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Analistaid"));

                    b.Property<int?>("Atividade")
                        .HasColumnType("integer")
                        .HasColumnName("atividade");

                    b.Property<int?>("Codigomainframe")
                        .HasColumnType("integer")
                        .HasColumnName("codigomainframe");

                    b.Property<int?>("Dataexclusao")
                        .HasColumnType("integer")
                        .HasColumnName("dataexclusao");

                    b.Property<int?>("Flagativo")
                        .HasColumnType("integer")
                        .HasColumnName("flagativo");

                    b.Property<int?>("Grupo")
                        .HasColumnType("integer")
                        .HasColumnName("grupo");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Legenda")
                        .HasColumnType("character varying")
                        .HasColumnName("legenda");

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuario");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Analistaid")
                        .HasName("analista_pkey");

                    b.ToTable("analista", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Analistum1", b =>
                {
                    b.Property<int>("Analistaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("analistaid")
                        .HasComment("Código do analista");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Analistaid"));

                    b.Property<int>("Codmain")
                        .HasColumnType("integer")
                        .HasColumnName("codmain")
                        .HasComment("Código do analista no cadastro do mainframe, tem que estar correto para EXPORTAÇÃO DOS PROJ para o MAINFRAME");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome")
                        .HasComment("Nome do analista");

                    b.HasKey("Analistaid")
                        .HasName("analista_pkey");

                    b.ToTable("analista", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Areareceptora", b =>
                {
                    b.Property<int>("Areareceptoraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("areareceptoraid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Areareceptoraid"));

                    b.Property<int?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro")
                        .HasComment("forminputlabel[Bairro]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Endereco")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("endereco")
                        .HasComment("forminputlabel[Endereço]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("latitude")
                        .HasComment("forminputlabel[latitude]\r\nforminputsize[10]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("longitude")
                        .HasComment("forminputlabel[longitude]\r\nforminputsize[10]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero")
                        .HasComment("forminputlabel[N°]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Numerolicenca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("numerolicenca")
                        .HasComment("forminputlabel[N° Licença]\r\nforminputsize[20]\r\nforminputclass[number]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[N° Licença]\r\ncolumngridtype[ro]\r\ncolumngridsize[120]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Regiao")
                        .HasColumnType("integer")
                        .HasColumnName("regiao");

                    b.Property<string>("Telefone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefone")
                        .HasComment("forminputlabel[Telefone]\r\nforminputsize[12]\r\nforminputclass[phone]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("tipo")
                        .HasComment("0-Ecoponto / 1-Ponto-Apoio\r\n\r\nforminputlabel[Tipo]\r\nforminputsize[30]\r\nforminputclass[required]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Areareceptoraid")
                        .HasName("areareceptora_pkey");

                    b.ToTable("areareceptora", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Área Receptora]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Áreas Receptoras]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Areareceptora1", b =>
                {
                    b.Property<int>("Areareceptoraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("areareceptoraid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Areareceptoraid"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<int?>("Codigo")
                        .HasColumnType("integer")
                        .HasColumnName("codigo")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Complemento")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("complemento");

                    b.Property<int?>("Empresa")
                        .HasColumnType("integer")
                        .HasColumnName("empresa");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<decimal?>("Inscricaomunicipal")
                        .HasPrecision(11)
                        .HasColumnType("numeric(11)")
                        .HasColumnName("inscricaomunicipal")
                        .HasComment("forminputlabel[Inscrição Municipal]\r\nforminputsize[15]\r\nforminputclass[inscricaomunicipal]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Inscrição Municipal]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Licencaambiental")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("licencaambiental");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numero");

                    b.Property<string>("Rua")
                        .HasColumnType("character varying")
                        .HasColumnName("rua");

                    b.Property<string>("Senha")
                        .HasColumnType("character varying")
                        .HasColumnName("senha");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao")
                        .HasComment("forminputlabel[Situação]\r\nforminputsize[10]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone");

                    b.Property<int?>("Transportadora")
                        .HasColumnType("integer")
                        .HasColumnName("transportadora");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<DateOnly?>("Validadelicenca")
                        .HasColumnType("date")
                        .HasColumnName("validadelicenca");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Areareceptoraid")
                        .HasName("areareceptora_pkey");

                    b.HasIndex("Empresa");

                    b.HasIndex("Transportadora");

                    b.HasIndex(new[] { "Inscricaomunicipal" }, "areareceptora_idx");

                    b.ToTable("areareceptora", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Área Receptora]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Áreas Receptoras]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Armazenamento", b =>
                {
                    b.Property<int>("Armazenamentoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("armazenamentoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Armazenamentoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Armazenamentoid")
                        .HasName("armazenamento_pkey");

                    b.ToTable("armazenamento", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Armazenamento]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Armazenamentos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo", b =>
                {
                    b.Property<int>("Arquivoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("arquivoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Arquivoid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int>("Modulosistema")
                        .HasColumnType("integer")
                        .HasColumnName("modulosistema")
                        .HasComment("forminputlabel[Módulo Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[modulo.nome]\r\n\r\ncolumngridid[modulosistema.modulo.nome]\r\ncolumngridtitle[Módulo Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[50]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("url")
                        .HasComment("forminputlabel[URL] \r\nforminputsize[50]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Arquivoid")
                        .HasName("arquivo_pk");

                    b.HasIndex("Modulosistema");

                    b.ToTable("arquivo", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Arquivo]\r\nfieldsgrid[arquivoid,nome,url,modulo.nome:arquivoid]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter] \r\n\r\nfieldsform[arquivoid,nome,url,modulo.moduloid,modulo.nome] \r\n\r\ngridtitle[Lista de Arquivos]\r\n\r\n");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo1", b =>
                {
                    b.Property<int>("Arquivoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("arquivoid")
                        .HasComment("Código do arquivo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Arquivoid"));

                    b.Property<byte[]>("Conteudo")
                        .HasColumnType("bytea")
                        .HasColumnName("conteudo")
                        .HasComment("Conteudo do arquivo");

                    b.Property<int>("Tipoarquivo")
                        .HasColumnType("integer")
                        .HasColumnName("tipoarquivo")
                        .HasComment("Tipo do arquivo");

                    b.HasKey("Arquivoid")
                        .HasName("arquivo_pkey");

                    b.HasIndex("Tipoarquivo");

                    b.ToTable("arquivo", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo2", b =>
                {
                    b.Property<int>("Arquivoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("arquivoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Arquivoid"));

                    b.Property<string>("Caminho")
                        .HasColumnType("character varying")
                        .HasColumnName("caminho");

                    b.Property<byte[]>("Conteudo")
                        .HasColumnType("bytea")
                        .HasColumnName("conteudo");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<int>("Tipoarquivo")
                        .HasColumnType("integer")
                        .HasColumnName("tipoarquivo");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Arquivoid")
                        .HasName("arquivo_pkey");

                    b.HasIndex("Tipoarquivo")
                        .HasDatabaseName("IX_arquivo_tipoarquivo1");

                    b.ToTable("arquivo", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivousuario", b =>
                {
                    b.Property<int>("Arquivousuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("arquivousuarioid")
                        .HasComment("forminputlabel[Código] forminputsize[7]  columngridid[] columngridtitle[Código] columngridtype[ro] columngridsize[80] columngridalign[left] columngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Arquivousuarioid"));

                    b.Property<int>("Arquivo")
                        .HasColumnType("integer")
                        .HasColumnName("arquivo")
                        .HasComment("forminputlabel[Arquivo]\r\nforminputsize[250]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[arquivoid,nome,url,modulo.nome:arquivoid]\r\n\r\ncolumngridid[arquivo.nome]\r\ncolumngridtitle[Arquivo]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Denyarquivo")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("denyarquivo")
                        .HasComment("forminputlabel[DenyArquivo]\r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Grantarquivo")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("grantarquivo")
                        .HasComment("forminputlabel[GrantArquivo]\r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario")
                        .HasComment("forminputlabel[Usuário]\r\nforminputsize[50]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[usuarioid,nome,login,senha:usuarioid]\r\n\r\ncolumngridid[usuario.nome]\r\ncolumngridtitle[Usuário]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Arquivousuarioid")
                        .HasName("arquivousuario_pk");

                    b.HasIndex("Arquivo");

                    b.HasIndex("Usuario");

                    b.ToTable("arquivousuario", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Arquivo / Usuário]   \r\nfieldsgrid[arquivousuarioid,usuario.nome,arquivo.url,permissao.nome:arquivousuarioid] \r\n\r\nfieldsform[arquivousuarioid,usuario.usuarioid,usuario.nome,arquivo.arquivoid,arquivo.url,permissao.permissaoid,permissao.nome] \r\n\r\ngridtitle[Lista de Arquivos / Usuário]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Assunto", b =>
                {
                    b.Property<int>("Assuntoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("assuntoid")
                        .HasComment("Código do assunto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Assuntoid"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao")
                        .HasComment("Descrição do assunto");

                    b.HasKey("Assuntoid")
                        .HasName("assunto_pkey");

                    b.ToTable("assunto", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Assunto1", b =>
                {
                    b.Property<int>("Assuntoid")
                        .HasColumnType("integer")
                        .HasColumnName("assuntoid");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Assuntoid")
                        .HasName("assunto_pkey");

                    b.ToTable("assunto", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Atividade", b =>
                {
                    b.Property<int>("Atividadeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("atividadeid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Atividadeid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Atividadeid")
                        .HasName("atividade_pkey");

                    b.ToTable("atividade", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Atividade]\r\n\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\n\r\ngridtitle[Lista de Atividade]\r\n");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Audit", b =>
                {
                    b.Property<int>("Auditid")
                        .HasColumnType("integer")
                        .HasColumnName("auditid");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data");

                    b.Property<int?>("Entidade")
                        .HasColumnType("integer")
                        .HasColumnName("entidade");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int?>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema");

                    b.Property<string>("Strjson")
                        .HasColumnType("character varying")
                        .HasColumnName("strjson");

                    b.Property<string>("Tipomanutencao")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("tipomanutencao");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.ToTable("audit", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Audit1", b =>
                {
                    b.Property<int>("Auditid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("auditid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Auditid"));

                    b.Property<DateTime?>("Data")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data");

                    b.Property<int?>("Entidade")
                        .HasColumnType("integer")
                        .HasColumnName("entidade");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Profissional")
                        .HasColumnType("character varying")
                        .HasColumnName("profissional");

                    b.Property<int?>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema");

                    b.Property<string>("Strjson")
                        .HasColumnType("character varying")
                        .HasColumnName("strjson");

                    b.Property<string>("Tipomanutencao")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("tipomanutencao");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Auditid")
                        .HasName("audit_pkey");

                    b.ToTable("audit", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Aviso", b =>
                {
                    b.Property<int>("Avisoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avisoid")
                        .HasDefaultValueSql("nextval(('\"public\".\"aviso_avisoid_seq\"'::text)::regclass)");

                    b.Property<DateTime?>("Datafinal")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datafinal");

                    b.Property<DateTime?>("Datainicial")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datainicial");

                    b.Property<int?>("Grupo")
                        .HasColumnType("integer")
                        .HasColumnName("grupo");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Mensagem")
                        .HasColumnType("text")
                        .HasColumnName("mensagem");

                    b.Property<int?>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema");

                    b.Property<int?>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Avisoid")
                        .HasName("aviso_pkey");

                    b.ToTable("aviso", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Bairro", b =>
                {
                    b.Property<int>("Bairroid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bairroid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Bairroid"));

                    b.Property<string>("Abreviatura")
                        .HasColumnType("character varying")
                        .HasColumnName("abreviatura");

                    b.Property<int?>("Cidade")
                        .HasColumnType("integer")
                        .HasColumnName("cidade");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("estado");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[70]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Regiaourbana")
                        .HasColumnType("integer")
                        .HasColumnName("regiaourbana");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Bairroid")
                        .HasName("bairro_pkey");

                    b.HasIndex("Regiaourbana");

                    b.HasIndex(new[] { "Nome" }, "bairro_nome_idx");

                    b.HasIndex(new[] { "Estado" }, "bairro_uf_idx");

                    b.ToTable("bairro", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Bairros]\r\n\r\nfiltersgrid[#text_filter,#text_filter]\r\ngridtitle[Lista de Bairros]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Bairro1", b =>
                {
                    b.Property<int>("Bairroid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bairroid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Bairroid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Regiaourbana")
                        .HasColumnType("integer")
                        .HasColumnName("regiaourbana")
                        .HasComment("forminputlabel[Região Urbana] \r\nforminputsize[100]\r\n\r\nsearchmode[popup] \r\npopupresultfield[regiaourbana.nome]\r\npopupfieldsgrid[regiaourbanaid,nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Região Urbana] \r\ncolumngridtype[ro] \r\ncolumngridsize[100] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Bairroid")
                        .HasName("bairro_pkey");

                    b.HasIndex("Regiaourbana")
                        .HasDatabaseName("IX_bairro_regiaourbana1");

                    b.ToTable("bairro", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Bairro]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Bairros]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Bemvindo", b =>
                {
                    b.Property<int>("Bemvindoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bemvindoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Bemvindoid"));

                    b.Property<int>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("ativo");

                    b.Property<string>("Conteudo")
                        .HasColumnType("character varying")
                        .HasColumnName("conteudo");

                    b.Property<DateTime?>("Datahora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahora")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("version");

                    b.HasKey("Bemvindoid")
                        .HasName("bemvindo_pkey");

                    b.ToTable("bemvindo", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Caracteristica", b =>
                {
                    b.Property<int>("Caracteristicaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("caracteristicaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Caracteristicaid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Caracteristicaid")
                        .HasName("caracteristica_pkey");

                    b.ToTable("caracteristica", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Característica]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Características]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Caracteristicaemp", b =>
                {
                    b.Property<int>("Caracteristicaempid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("caracteristicaempid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Caracteristicaempid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Caracteristicaempid")
                        .HasName("caracteristicaemp_pkey");

                    b.ToTable("caracteristicaemp", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Característica do Empreendimento]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Características do Empreendimento]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Certidao", b =>
                {
                    b.Property<int>("Certidaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("certidaoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Certidaoid"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<int?>("Cep")
                        .HasColumnType("integer")
                        .HasColumnName("cep");

                    b.Property<string>("Conesp")
                        .HasColumnType("text")
                        .HasColumnName("conesp")
                        .HasComment("Condições Específicas");

                    b.Property<string>("Conger")
                        .HasColumnType("text")
                        .HasColumnName("conger")
                        .HasComment("Condições Gerais");

                    b.Property<DateOnly>("Datacertidao")
                        .HasColumnType("date")
                        .HasColumnName("datacertidao");

                    b.Property<decimal?>("Dimensaox")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("dimensaox");

                    b.Property<decimal?>("Dimensaoy")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("dimensaoy");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Inscricaoeconomica")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaoeconomica");

                    b.Property<string>("Inscricaoimobiliaria")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaoimobiliaria");

                    b.Property<int?>("Numerocertidao")
                        .HasColumnType("integer")
                        .HasColumnName("numerocertidao");

                    b.Property<string>("Numeroprocesso")
                        .HasColumnType("character varying")
                        .HasColumnName("numeroprocesso");

                    b.Property<int?>("Regular")
                        .HasColumnType("integer")
                        .HasColumnName("regular");

                    b.Property<int>("Tipoveiculodivulgacao")
                        .HasColumnType("integer")
                        .HasColumnName("tipoveiculodivulgacao");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Certidaoid")
                        .HasName("ceridao_pkey");

                    b.HasIndex("Tipoveiculodivulgacao");

                    b.ToTable("certidao", "divulgacao");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Certidaoconformidade", b =>
                {
                    b.Property<int>("Certidaoconid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("certidaoconid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Certidaoconid"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<int?>("Cep")
                        .HasColumnType("integer")
                        .HasColumnName("cep");

                    b.Property<DateOnly>("Datacertidao")
                        .HasColumnType("date")
                        .HasColumnName("datacertidao");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Inscricaoimobiliaria")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaoimobiliaria");

                    b.Property<int>("Numerocertidaocon")
                        .HasColumnType("integer")
                        .HasColumnName("numerocertidaocon");

                    b.Property<string>("Numeroprocesso")
                        .HasColumnType("character varying")
                        .HasColumnName("numeroprocesso");

                    b.Property<int>("Tipoveiculodivulgacao")
                        .HasColumnType("integer")
                        .HasColumnName("tipoveiculodivulgacao");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Certidaoconid")
                        .HasName("certidaoconformidade_pkey");

                    b.HasIndex("Tipoveiculodivulgacao");

                    b.ToTable("certidaoconformidade", "divulgacao");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Cidade", b =>
                {
                    b.Property<string>("Cep")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cep");

                    b.Property<int>("Cidadeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cidadeid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Cidadeid"));

                    b.Property<string>("Estado")
                        .HasColumnType("character varying")
                        .HasColumnName("estado");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[70]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Situacao")
                        .HasColumnType("character varying")
                        .HasColumnName("situacao");

                    b.Property<string>("Tipo")
                        .HasColumnType("character varying")
                        .HasColumnName("tipo");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasIndex(new[] { "Estado" }, "cidade_estado_idx");

                    b.HasIndex(new[] { "Nome" }, "cidade_nome_idx");

                    b.ToTable("cidade", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\nformtitle[Cadastro de Cidade]\r\nfiltersgrid[#text_filter,#text_filter]\r\ngridtitle[Lista de Cidade]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Classe", b =>
                {
                    b.Property<int>("Classeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("classeid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Classeid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Classeid")
                        .HasName("classe_pkey");

                    b.ToTable("classe", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Classe]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Classes]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Classificacao", b =>
                {
                    b.Property<int>("Classificacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("classificacaoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Classificacaoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Classificacaoid")
                        .HasName("classificacao_pkey");

                    b.ToTable("classificacao", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Classificação]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Classificações]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Classificacao1", b =>
                {
                    b.Property<int>("Classificacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("classificacaoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Classificacaoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Icone")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("icone")
                        .HasComment("forminputlabel[Ícone] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Ícone] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Classificacaoid")
                        .HasName("classificacao_pkey");

                    b.ToTable("classificacao", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Classificação]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Classificações]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Codificacao", b =>
                {
                    b.Property<int>("Codificacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codificacaoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codificacaoid"));

                    b.Property<int?>("Especial")
                        .HasColumnType("integer")
                        .HasColumnName("especial");

                    b.Property<decimal?>("Fatoratual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasColumnName("fatoratual")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<int?>("Pontoanalise1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("pontoanalise1");

                    b.Property<int?>("Pontoanalise2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("pontoanalise2");

                    b.Property<int?>("Pontoanalise3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("pontoanalise3");

                    b.Property<int?>("Pontoanalise4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("pontoanalise4");

                    b.Property<int?>("Pontoanalise5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("pontoanalise5");

                    b.Property<int?>("Pontobase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("pontobase");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Codificacaoid")
                        .HasName("codificacao_pkey");

                    b.ToTable("codificacao", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Comunicado", b =>
                {
                    b.Property<int>("Comunicadoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("comunicadoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Comunicadoid"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<string>("Cargo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cargo")
                        .HasComment("Cargo/Função");

                    b.Property<string>("Exigencia")
                        .HasColumnType("text")
                        .HasColumnName("exigencia")
                        .HasComment("Texto descritivo das exigências");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud")
                        .HasComment("Grupo Logado (auditoria)");

                    b.Property<string>("Inscricaoeconomica")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("inscricaoeconomica")
                        .HasComment("Inscrição Municpal");

                    b.Property<string>("Local")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("local")
                        .HasComment("Localalidade de referência");

                    b.Property<int>("Numerocomunicado")
                        .HasColumnType("integer")
                        .HasColumnName("numerocomunicado");

                    b.Property<string>("Processo")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("processo");

                    b.Property<string>("Registrado")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("registrado")
                        .HasComment("Funcionário que registra o comunicado");

                    b.Property<int?>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("tipo")
                        .HasComment("1 - Indefirido\r\n2 - Vistoria");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud")
                        .HasComment("Unidade Logado (auditoria)");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud")
                        .HasComment("Usuario Logado (auditoria)");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("Versao do registro (auditoria)");

                    b.HasKey("Comunicadoid")
                        .HasName("comunicado_pkey");

                    b.ToTable("comunicado", "divulgacao");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Contratado", b =>
                {
                    b.Property<int>("Contratadoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("contratadoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Contratadoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Responsavel")
                        .HasColumnType("character varying")
                        .HasColumnName("responsavel")
                        .HasComment("forminputlabel[Responsável] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Responsável] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone")
                        .HasComment("forminputlabel[Telefone] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Telefone] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Contratadoid")
                        .HasName("contratado_pkey");

                    b.ToTable("contratado", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Contratado]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Contratados]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Controleresiduo", b =>
                {
                    b.Property<int>("Controleresiduoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("controleresiduoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<decimal>("Botaforapeso")
                        .HasColumnType("numeric")
                        .HasColumnName("botaforapeso")
                        .HasComment("forminputlabel[Peso Bota-fora]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal>("Botaforavolume")
                        .HasColumnType("numeric")
                        .HasColumnName("botaforavolume")
                        .HasComment("forminputlabel[Volume Bota-fora]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Caracteristicaemp")
                        .HasColumnType("integer")
                        .HasColumnName("caracteristicaemp")
                        .HasComment("forminputlabel[Caracterização do Empreendimento]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[caracteristicaemp.nome]\r\n\r\ncolumngridid[caracteristicaemp.nome]\r\ncolumngridtitle[Caracterização do Empreendimento]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<decimal>("Construcaoarea")
                        .HasColumnType("numeric")
                        .HasColumnName("construcaoarea")
                        .HasComment("forminputlabel[Área Construção]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal>("Contrucaopeso")
                        .HasColumnType("numeric")
                        .HasColumnName("contrucaopeso")
                        .HasComment("forminputlabel[Peso Construção]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal>("Contrucaovolume")
                        .HasColumnType("numeric")
                        .HasColumnName("contrucaovolume")
                        .HasComment("forminputlabel[Volume Construção]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<DateTime?>("Datahoracadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoracadastro")
                        .HasComment("forminputlabel[Data Cadastro]\r\nforminputsize[15]\r\nforminputclass[]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal>("Demolicaopeso")
                        .HasColumnType("numeric")
                        .HasColumnName("demolicaopeso")
                        .HasComment("forminputlabel[Peso Demolição]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal>("Demolicaovolume")
                        .HasColumnType("numeric")
                        .HasColumnName("demolicaovolume")
                        .HasComment("forminputlabel[Volume Demolição]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal>("Emprestpeso")
                        .HasColumnType("numeric")
                        .HasColumnName("emprestpeso")
                        .HasComment("forminputlabel[Peso Empréstimo]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal>("Emprestvolume")
                        .HasColumnType("numeric")
                        .HasColumnName("emprestvolume")
                        .HasComment("forminputlabel[Volume Empréstimo]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Inscricaoimobiliaria")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("inscricaoimobiliaria");

                    b.Property<int?>("Prfage")
                        .HasColumnType("integer")
                        .HasColumnName("prfage");

                    b.Property<string>("Projeto")
                        .HasMaxLength(22)
                        .HasColumnType("character varying(22)")
                        .HasColumnName("projeto")
                        .HasComment("forminputlabel[Projeto]\r\nforminputsize[30]\r\n\r\nsearchmode[popup]\r\npopupresultfield[processo]\r\npopupfieldsgrid[projetoid,processo:projetoid]\r\n\r\ncolumngridid[projeto.processo]\r\ncolumngridtitle[Projeto]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Proprietario")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("proprietario");

                    b.Property<int>("Segregacaomat")
                        .HasColumnType("integer")
                        .HasColumnName("segregacaomat")
                        .HasComment("0-Sim / 1-Nao\r\nforminputlabel[Haverá Segregação do material no canteiro de obras?]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("forminputlabel[Status]\r\nforminputsize[180]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[status.descricao]\r\n\r\ncolumngridid[status.descricao]\r\ncolumngridtitle[Status]\r\ncolumngridtype[ro]\r\ncolumngridsize[50]\r\ncolumngridalign[left]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Controleresiduoid")
                        .HasName("controleresiduo_pkey");

                    b.HasIndex("Caracteristicaemp");

                    b.HasIndex("Status");

                    b.ToTable("controleresiduo", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Controle de Resíduo]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Controles de Resíduos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ctr", b =>
                {
                    b.Property<int>("Ctrid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ctrid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ctrid"));

                    b.Property<int?>("Areareceptora")
                        .HasColumnType("integer")
                        .HasColumnName("areareceptora")
                        .HasComment("forminputlabel[Área Receptora]\r\nforminputsize[180]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[areareceptora.nome]\r\n\r\ncolumngridid[areareceptora.nome]\r\ncolumngridtitle[Área Receptora]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Controleresiduo")
                        .HasColumnType("integer")
                        .HasColumnName("controleresiduo")
                        .HasComment("forminputlabel[controleresiduo]\r\nforminputsize[15]\r\nforminputclass[]\r\n\r\ngeragridmain[false]");

                    b.Property<DateTime?>("Datahorabaixa")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahorabaixa");

                    b.Property<DateTime?>("Datahoracadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoracadastro");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Inscricaoimobiliaria")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("inscricaoimobiliaria");

                    b.Property<string>("Nomecondutor")
                        .HasMaxLength(99)
                        .HasColumnType("character varying(99)")
                        .HasColumnName("nomecondutor")
                        .HasComment("forminputlabel[Nome Condutor]\r\nforminputsize[15]\r\nforminputclass[required uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Numeroctr")
                        .HasMaxLength(22)
                        .HasColumnType("character varying(22)")
                        .HasColumnName("numeroctr")
                        .HasComment("forminputlabel[Número-CTR]\r\nforminputsize[15]\r\nforminputclass[required number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Placaveiculo")
                        .HasMaxLength(22)
                        .HasColumnType("character varying(22)")
                        .HasColumnName("placaveiculo")
                        .HasComment("forminputlabel[Placa Veículo]\r\nforminputsize[15]\r\nforminputclass[required uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Prfage")
                        .HasColumnType("integer")
                        .HasColumnName("prfage");

                    b.Property<string>("Processo")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("processo");

                    b.Property<string>("Proprietario")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("proprietario");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int?>("Transportador")
                        .HasColumnType("integer")
                        .HasColumnName("transportador")
                        .HasComment("forminputlabel[Transportadora]\r\nforminputsize[180]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[transportadora.nome]\r\n\r\ncolumngridid[transportadora.nome]\r\ncolumngridtitle[Transportadora]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<decimal?>("Volumeclassea")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("volumeclassea")
                        .HasComment("forminputlabel[volume classe a]\r\nforminputsize[15]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal?>("Volumeclasseb")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("volumeclasseb")
                        .HasComment("forminputlabel[volume classe b]\r\nforminputsize[15]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal?>("Volumeclassec")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("volumeclassec")
                        .HasComment("forminputlabel[volume classe c]\r\nforminputsize[15]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal?>("Volumeclassed")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("volumeclassed")
                        .HasComment("forminputlabel[volume classe d]\r\nforminputsize[15]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.HasKey("Ctrid")
                        .HasName("ctr_pkey");

                    b.HasIndex("Areareceptora");

                    b.HasIndex("Prfage");

                    b.HasIndex("Status");

                    b.HasIndex("Transportador");

                    b.ToTable("ctr", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de CTR]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de CTR]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ctr1", b =>
                {
                    b.Property<int>("Ctrid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ctrid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ctrid"));

                    b.Property<int?>("Areareceptora")
                        .HasColumnType("integer")
                        .HasColumnName("areareceptora")
                        .HasComment("forminputlabel[Área-Receptora]\nforminputsize[180]\n\nsearchmode[comboboxdet]\ncomboboxresultfield[areareceptora.nome]\n\ngeragridmain[false]");

                    b.Property<int?>("Areareceptora2")
                        .HasColumnType("integer")
                        .HasColumnName("areareceptora2");

                    b.Property<int?>("Armazenamento")
                        .HasColumnType("integer")
                        .HasColumnName("armazenamento")
                        .HasComment("forminputlabel[Armazenamento]\r\nforminputsize[110]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[armazenamento.nome]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Autotransporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("autotransporte");

                    b.Property<int?>("Codigobaixa")
                        .HasColumnType("integer")
                        .HasColumnName("codigobaixa");

                    b.Property<DateTime>("Datahoracadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoracadastro")
                        .HasComment("forminputlabel[Data/Hora Cad.]\r\nforminputsize[14]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<DateTime?>("Datahoradesfinal")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoradesfinal");

                    b.Property<DateTime?>("Datahoraentrega")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoraentrega")
                        .HasComment("forminputlabel[Data/Hora Entrega]\nforminputsize[14]\nforminputclass[datetime]\n\ngeragridmain[false]");

                    b.Property<DateTime?>("Datahorafinalizado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahorafinalizado");

                    b.Property<DateTime?>("Datahorancertificado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahorancertificado");

                    b.Property<DateTime?>("Datahoratransportadora")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoratransportadora");

                    b.Property<int?>("Empresa")
                        .HasColumnType("integer")
                        .HasColumnName("empresa");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nomecondutor")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nomecondutor")
                        .HasComment("forminputlabel[Responsável]\r\nforminputsize[15]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Numeromanifesto")
                        .HasColumnType("integer")
                        .HasColumnName("numeromanifesto");

                    b.Property<string>("Obsdestfinal")
                        .HasColumnType("character varying")
                        .HasColumnName("obsdestfinal");

                    b.Property<string>("Obsdestfinal2")
                        .HasColumnType("character varying")
                        .HasColumnName("obsdestfinal2");

                    b.Property<string>("Placaveiculo")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("placaveiculo")
                        .HasComment("forminputlabel[Placa Veículo]\r\nforminputsize[12]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal?>("Quantidade")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("quantidade")
                        .HasComment("forminputlabel[Quantidade]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo")
                        .HasComment("forminputlabel[Resíduo]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\nsearchmode[popupdet]\r\npopupresultfield[nome]\r\npopupfieldsgrid[residuoid,nome,estadofisico.nome:residuoid]\r\n\r\ncolumngridid[residuo.nome]\r\ncolumngridtitle[Resíduo]\r\ncolumngridtype[ro]\r\ncolumngridsize[150]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao")
                        .HasComment("forminputlabel[Situação]\r\nforminputsize[10]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Transportadora")
                        .HasColumnType("integer")
                        .HasColumnName("transportadora")
                        .HasComment("forminputlabel[Transportadora]\r\nforminputsize[180]\r\n\r\nsearchmode[comboboxdet]\r\ncomboboxresultfield[transportadora.nome]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal?>("Transportadorasiat")
                        .HasPrecision(11)
                        .HasColumnType("numeric(11)")
                        .HasColumnName("transportadorasiat")
                        .HasComment("forminputlabel[Transportadora-SIAT]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade")
                        .HasComment("forminputlabel[Unidade]\r\nforminputsize[110]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[unidade.nome]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Ctrid")
                        .HasName("ctr_pkey");

                    b.HasIndex("Areareceptora")
                        .HasDatabaseName("IX_ctr_areareceptora1");

                    b.HasIndex("Areareceptora2");

                    b.HasIndex("Armazenamento");

                    b.HasIndex("Empresa");

                    b.HasIndex("Transportadora");

                    b.HasIndex("Unidade");

                    b.ToTable("ctr", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de CTR]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de CTR's]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ctrresiduo", b =>
                {
                    b.Property<int>("Ctrresiduoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ctrresiduoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ctrresiduoid"));

                    b.Property<string>("Codigobaixa")
                        .HasColumnType("character varying")
                        .HasColumnName("codigobaixa")
                        .HasComment("forminputlabel[Codigo Baixa]\nforminputsize[50]\nforminputclass[uppercase]\n\ncolumngridid[]\ncolumngridtitle[Codigo Baixa]\ncolumngridtype[ro]\ncolumngridsize[*]\ncolumngridalign[left]\ncolumngridcolor[white]");

                    b.Property<int>("Ctr")
                        .HasColumnType("integer")
                        .HasColumnName("ctr")
                        .HasComment("forminputlabel[Ctr]\r\nforminputsize[10]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\ngeraform[false]\ngeraformdet[false]\ngeragridmain[false]");

                    b.Property<string>("Numeromanifesto")
                        .HasColumnType("character varying")
                        .HasColumnName("numeromanifesto")
                        .HasComment("forminputlabel[Numero Manifesto]\nforminputsize[50]\nforminputclass[uppercase]\n\ncolumngridid[]\ncolumngridtitle[Numero Manifesto]\ncolumngridtype[ro]\ncolumngridsize[*]\ncolumngridalign[left]\ncolumngridcolor[white]");

                    b.Property<int?>("Qtde")
                        .HasColumnType("integer")
                        .HasColumnName("qtde")
                        .HasComment("forminputlabel[Quantidade]\nforminputsize[50]\nforminputclass[uppercase]\n\ncolumngridid[]\ncolumngridtitle[Quantidade]\ncolumngridtype[ro]\ncolumngridsize[*]\ncolumngridalign[left]\ncolumngridcolor[white]");

                    b.Property<int?>("Qtdetrans")
                        .HasColumnType("integer")
                        .HasColumnName("qtdetrans");

                    b.Property<int>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo")
                        .HasComment("forminputlabel[Resíduo]\nforminputsize[30]\nforminputclass[uppercase]\n\nsearchmode[popupdet]\npopupresultfield[nome]\npopupfieldsgrid[residuoid,nome,estadofisico.nome:residuoid]\n\ncolumngridid[residuo.nome]\ncolumngridtitle[Resíduo]\ncolumngridtype[ro]\ncolumngridsize[150]\ncolumngridalign[left]\ncolumngridcolor[white]");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade")
                        .HasComment("forminputlabel[Unidade]\r\nforminputsize[110]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[unidade.nome]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\ngeraform[false]\ngeraformdet[false]\ngeragridmain[false]");

                    b.Property<int?>("Unidadetrans")
                        .HasColumnType("integer")
                        .HasColumnName("unidadetrans")
                        .HasComment("forminputlabel[Unidade Transportadora]\r\nforminputsize[110]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[unidadetrans.nome]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\ngeraform[false]\ngeraformdet[false]\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\ngeraform[false]\ngeraformdet[false]\ngeragridmain[false]");

                    b.HasKey("Ctrresiduoid")
                        .HasName("ctrresiduo_pkey");

                    b.HasIndex("Ctr");

                    b.HasIndex("Unidade");

                    b.HasIndex("Unidadetrans");

                    b.ToTable("ctrresiduo", "residuos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Destinofinal", b =>
                {
                    b.Property<int>("Destinofinalid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("destinofinalid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Destinofinalid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Destinofinalid")
                        .HasName("destinofinal_pkey");

                    b.ToTable("destinofinal", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Documento", b =>
                {
                    b.Property<int>("Documentoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("documentoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Documentoid"));

                    b.Property<int>("Arquivo")
                        .HasColumnType("integer")
                        .HasColumnName("arquivo");

                    b.Property<string>("Caminho")
                        .HasColumnType("character varying")
                        .HasColumnName("caminho")
                        .HasComment("forminputlabel[Caminho] \r\nforminputsize[70]  \r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Remessa")
                        .HasColumnType("integer")
                        .HasColumnName("remessa")
                        .HasComment("forminputlabel[Remessa]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[remessa.titulo]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao")
                        .HasComment("forminputlabel[Situacao] \r\nforminputsize[250]  \r\n\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[situacao.descricao]\r\n\r\ncolumngridid[situacao.descricao]\r\ncolumngridtitle[Situacao]\r\ncolumngridtype[ro]\r\ncolumngridsize[300]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Titulo")
                        .HasColumnType("character varying")
                        .HasColumnName("titulo")
                        .HasComment("forminputlabel[Titulo] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Titulo] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Documentoid")
                        .HasName("documento_pkey");

                    b.HasIndex(new[] { "Arquivo" }, "documento_arquivo_idx");

                    b.HasIndex(new[] { "Remessa" }, "documento_remessa_idx");

                    b.HasIndex(new[] { "Situacao" }, "documento_situacao_idx");

                    b.ToTable("documento", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Documentos]\r\n\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\n\r\ngridtitle[Lista de Documentos]\r\n");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Documento1", b =>
                {
                    b.Property<int>("Documentoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("documentoid")
                        .HasComment("Código do documento");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Documentoid"));

                    b.Property<int>("Arquivo")
                        .HasColumnType("integer")
                        .HasColumnName("arquivo")
                        .HasComment("Arquivo vinculado");

                    b.Property<int>("Remessa")
                        .HasColumnType("integer")
                        .HasColumnName("remessa")
                        .HasComment("Remessa vinculado");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao")
                        .HasComment("Situação do documento");

                    b.HasKey("Documentoid")
                        .HasName("documento_pkey");

                    b.HasIndex("Arquivo");

                    b.HasIndex("Remessa");

                    b.HasIndex("Situacao");

                    b.ToTable("documento", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Empresa", b =>
                {
                    b.Property<int>("Empresaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("empresaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Empresaid"));

                    b.Property<string>("Celular")
                        .HasColumnType("character varying")
                        .HasColumnName("celular")
                        .HasComment("forminputlabel[Celular]\r\nforminputsize[12]\r\nforminputclass[phone]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Cep")
                        .HasColumnType("integer")
                        .HasColumnName("cep")
                        .HasComment("forminputlabel[CEP]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Complemento")
                        .HasColumnType("character varying")
                        .HasColumnName("complemento")
                        .HasComment("forminputlabel[Complemento]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero")
                        .HasComment("forminputlabel[N&ordm;]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Responsavel")
                        .HasColumnType("character varying")
                        .HasColumnName("responsavel")
                        .HasComment("forminputlabel[Responsável]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Responsável]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Rua")
                        .HasColumnType("integer")
                        .HasColumnName("rua")
                        .HasComment("forminputlabel[Rua]\r\nforminputsize[12]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone")
                        .HasComment("forminputlabel[Telefone]\r\nforminputsize[12]\r\nforminputclass[phone]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Empresaid")
                        .HasName("empresa_pkey");

                    b.HasIndex("Rua");

                    b.ToTable("empresa", "divulgacao", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Responsável]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Responsáveis]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Empresa1", b =>
                {
                    b.Property<int>("Empresaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("empresaid")
                        .HasDefaultValueSql("nextval(('\"recadempresa\".\"empresa_empresaid_seq\"'::text)::regclass)")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<bool?>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo")
                        .HasComment("Este campo serve para validar quais empresas podem ou nao logar.");

                    b.Property<bool?>("Atualizadosiat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("atualizadosiat");

                    b.Property<string>("Bairrocorresp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bairrocorresp")
                        .HasComment("forminputlabel[Bairro Correspondência]\r\nforminputsize[40]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Bairrolocal")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bairrolocal")
                        .HasComment("forminputlabel[Bairro Localização]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Celcorresp")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("celcorresp")
                        .HasComment("forminputlabel[Cel. Correspondência]\r\nforminputsize[15]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Cellocal")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("cellocal");

                    b.Property<string>("Cepcorresp")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("cepcorresp")
                        .HasComment("forminputlabel[CEP Correspondência]\r\nforminputsize[10]\r\nforminputclass[cep]\r\ngeragridmain[false]");

                    b.Property<string>("Ceplocal")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("ceplocal")
                        .HasComment("forminputlabel[CEP Localização]\r\nforminputsize[10]\r\nforminputclass[cep]\r\ngeragridmain[false]");

                    b.Property<string>("Cidadecorresp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cidadecorresp")
                        .HasComment("forminputlabel[Cidade Correspondência]\r\nforminputsize[40]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Cidadelocal")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cidadelocal")
                        .HasComment("forminputlabel[Cidade Localização]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<int?>("Codpaiscorresp")
                        .HasColumnType("integer")
                        .HasColumnName("codpaiscorresp")
                        .HasComment("forminputlabel[Cod. País Correspondência]\r\nforminputsize[20]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<int?>("Codpaislocal")
                        .HasColumnType("integer")
                        .HasColumnName("codpaislocal")
                        .HasComment("forminputlabel[Código País Localização]\r\nforminputsize[30]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<string>("Complendcorresp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("complendcorresp")
                        .HasComment("forminputlabel[Complemento Correspondência]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Complendlocal")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("complendlocal")
                        .HasComment("forminputlabel[Complemento Endereço Localização]\r\nforminputsize[20]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<int?>("Contador")
                        .HasColumnType("integer")
                        .HasColumnName("contador")
                        .HasComment("forminputlabel[Contador]\r\nforminputsize[10]\r\ngeragridmain[false]");

                    b.Property<string>("Cpfcnpj")
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)")
                        .HasColumnName("cpfcnpj")
                        .HasComment("forminputlabel[CPF/CNPJ] \r\nforminputsize[15]\r\nforminputclass[number]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[CPF/CNPJ]\r\ncolumngridtype[ro]\r\ncolumngridsize[100]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Cpfresponsavel")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfresponsavel");

                    b.Property<DateTime?>("Datahoraalteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoraalteracao")
                        .HasComment("geraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Dddcelcorresp")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dddcelcorresp")
                        .HasComment("forminputlabel[DDD-Cel. Correspondência]\r\nforminputsize[10]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<string>("Dddcellocal")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dddcellocal");

                    b.Property<string>("Dddfaxcorresp")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dddfaxcorresp")
                        .HasComment("forminputlabel[DDD-Fax Correspondência]\r\nforminputsize[10]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<string>("Dddfaxlocal")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dddfaxlocal")
                        .HasComment("forminputlabel[DDD-Fax Localização]\r\nforminputsize[10]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<string>("Dddfonecorresp")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dddfonecorresp")
                        .HasComment("forminputlabel[DDD-Fone Correspondência] \r\nforminputsize[10]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<string>("Dddfonelocal")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("dddfonelocal")
                        .HasComment("forminputlabel[DDD-Fone Localização]\r\nforminputsize[10]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<bool?>("Disponivel")
                        .HasColumnType("boolean")
                        .HasColumnName("disponivel")
                        .HasComment("Empresas ques estao visiveis (listagem grid) para o login da prefeitura");

                    b.Property<string>("Distritocorresp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("distritocorresp")
                        .HasComment("forminputlabel[Distrito Correspondência]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Distritolocal")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("distritolocal")
                        .HasComment("forminputlabel[Distrito Localização]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("email")
                        .HasComment("forminputlabel[Email]\r\nforminputsize[40]\r\nforminputclass[email]\r\ngeragridmain[false]");

                    b.Property<string>("Endcorresp")
                        .HasColumnType("character varying")
                        .HasColumnName("endcorresp");

                    b.Property<string>("Endlocal")
                        .HasColumnType("character varying")
                        .HasColumnName("endlocal");

                    b.Property<int?>("Etapa")
                        .HasColumnType("integer")
                        .HasColumnName("etapa");

                    b.Property<string>("Faxcorresp")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("faxcorresp")
                        .HasComment("forminputlabel[Fax Correspondência]\r\nforminputsize[15]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Faxlocal")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("faxlocal")
                        .HasComment("forminputlabel[Fax Localização]\r\nforminputsize[15]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Fonecorresp")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("fonecorresp")
                        .HasComment("forminputlabel[Fone Correspondência] \r\nforminputsize[15]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Fonelocal")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("fonelocal")
                        .HasComment("forminputlabel[Fone Localização]\r\nforminputsize[15]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Inscricaoestadual")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("inscricaoestadual")
                        .HasComment("forminputlabel[Inscrição Estadual] \r\nforminputsize[15]\r\nforminputclass[number]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Inscrição Estadual]\r\ncolumngridtype[ro]\r\ncolumngridsize[100]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Inscricaomunicipal")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("inscricaomunicipal")
                        .HasComment("forminputlabel[Inscrição Municipal] \r\nforminputsize[15]\r\nforminputclass[number]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Inscrição Municipal]\r\ncolumngridtype[ro]\r\ncolumngridsize[100]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Ipalteracao")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("ipalteracao")
                        .HasComment("geraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Logradourocorresp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("logradourocorresp")
                        .HasComment("forminputlabel[Logradouro Correspondência]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Logradourolocal")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("logradourolocal")
                        .HasComment("forminputlabel[Logradouro Localização]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Nomefantasia")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("nomefantasia")
                        .HasComment("forminputlabel[Nome Fantasia]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome-Fantasia]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Numeroendcorresp")
                        .HasColumnType("integer")
                        .HasColumnName("numeroendcorresp")
                        .HasComment("forminputlabel[Nº Correspondência]\r\nforminputsize[10]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<int?>("Numeroendlocal")
                        .HasColumnType("integer")
                        .HasColumnName("numeroendlocal");

                    b.Property<string>("Numeronire")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numeronire")
                        .HasComment("forminputlabel[Número NIRE] \r\nforminputsize[10]\r\nforminputclass[number]\r\ngeragridmain[false]");

                    b.Property<string>("Observacao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("observacao")
                        .HasComment("forminputlabel[Observação] \r\nforminputsize[50]\r\nforminputclass[uppercase]");

                    b.Property<bool?>("Primeiraatualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("primeiraatualizacao");

                    b.Property<string>("Razaosocial")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("razaosocial")
                        .HasComment("forminputlabel[Razão Social] \r\nforminputsize[40]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Razaosocialreduzido")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("razaosocialreduzido")
                        .HasComment("forminputlabel[Razão Social Reduzido] \r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Respostaxml")
                        .HasColumnType("text")
                        .HasColumnName("respostaxml");

                    b.Property<string>("Senha")
                        .HasColumnType("character varying")
                        .HasColumnName("senha");

                    b.Property<string>("Situacao")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("situacao")
                        .HasComment("SITUAÇÃO ( A / I )\r\n\r\nforminputlabel[Situação] \r\nforminputsize[10]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Tipobairrocorresp")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tipobairrocorresp")
                        .HasComment("forminputlabel[Tipo Bairro Correspondência]\r\nforminputsize[20]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Tipologcorresp")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tipologcorresp")
                        .HasComment("forminputlabel[Tipo Logradouro Correspondência]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Tipologlocal")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tipologlocal")
                        .HasComment("forminputlabel[Tipo Logradouro Localização]\r\nforminputsize[20]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Tipopessoa")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("tipopessoa")
                        .HasComment("TIPO DA PESSOA ( PF / PJ / PFE)\r\n\r\nforminputlabel[Tipo Pessoa]\r\nforminputsize[5]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Tipo-Pessoa]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Ufcorresp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ufcorresp")
                        .HasComment("forminputlabel[UF Correspondência]\r\nforminputsize[20]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<string>("Uflocal")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("uflocal")
                        .HasComment("forminputlabel[UF Localização]\r\nforminputsize[15]\r\nforminputclass[uppercase]\r\ngeragridmain[false]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(147)
                        .HasColumnName("usuario");

                    b.Property<int?>("Usuarioalteracao")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioalteracao");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Empresaid")
                        .HasName("empresa_pkey");

                    b.HasIndex(new[] { "Cpfcnpj" }, "empresa_cpfcnpj_idx");

                    b.HasIndex(new[] { "Inscricaomunicipal" }, "empresa_inscricaomunicipal_idx");

                    b.ToTable("empresa", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Empresa]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Empresas]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Empresa2", b =>
                {
                    b.Property<int>("Empresaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("empresaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Empresaid"));

                    b.Property<DateTime?>("Datacadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadastro");

                    b.Property<DateOnly?>("Datalicenciamento")
                        .HasColumnType("date")
                        .HasColumnName("datalicenciamento")
                        .HasComment("forminputlabel[Data Licenciamento]\r\nforminputsize[10]\r\nforminputclass[date]\r\n\r\ngeragridmain[false]");

                    b.Property<DateOnly?>("Datavenclicenciamento")
                        .HasColumnType("date")
                        .HasColumnName("datavenclicenciamento")
                        .HasComment("forminputlabel[Dt. Venc. Licenciamento]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Inscricaoeconomica")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("inscricaoeconomica");

                    b.Property<string>("Inscricaomunicipal")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaomunicipal");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<int?>("Numerolicenciamento")
                        .HasColumnType("integer")
                        .HasColumnName("numerolicenciamento")
                        .HasComment("forminputlabel[Nº Licenciamento]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Razaosocial")
                        .HasColumnType("character varying")
                        .HasColumnName("razaosocial");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("senha")
                        .HasComment("forminputlabel[Senha]\r\nforminputsize[10]\r\nforminputclass[]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Empresaid")
                        .HasName("empresa_pkey");

                    b.HasIndex(new[] { "Inscricaomunicipal" }, "empresa_inscricaomunicipal_key1")
                        .IsUnique();

                    b.ToTable("empresa", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Empresa]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Empresas]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Empresaresiduo", b =>
                {
                    b.Property<int>("Empresaresiduoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("empresaresiduoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Empresaresiduoid"));

                    b.Property<int>("Armazenamento")
                        .HasColumnType("integer")
                        .HasColumnName("armazenamento")
                        .HasComment("forminputlabel[Armazenamento]\r\nforminputsize[150]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[armazenamento.nome]\r\n\r\ncolumngridid[armazenamento.nome]\r\ncolumngridtitle[Armazenamento]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Empresa")
                        .HasColumnType("integer")
                        .HasColumnName("empresa");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo")
                        .HasComment("forminputlabel[Resíduo]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[residuoid,nome:residuoid]\r\n\r\ncolumngridid[residuo.nome]\r\ncolumngridtitle[Resíduo]\r\ncolumngridtype[ro]\r\ncolumngridsize[150]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Empresaresiduoid")
                        .HasName("empresaresiduo_pkey");

                    b.HasIndex("Armazenamento");

                    b.HasIndex("Empresa");

                    b.ToTable("empresaresiduo", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Resíduo da Empresa]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Resíduos da Empresa]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Endereco", b =>
                {
                    b.Property<int>("Enderecoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("enderecoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Enderecoid"));

                    b.Property<int?>("Bairro")
                        .HasColumnType("integer")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasColumnType("character varying")
                        .HasColumnName("cep");

                    b.Property<int?>("Logradouro")
                        .HasColumnType("integer")
                        .HasColumnName("logradouro");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<int?>("Tipologradouro")
                        .HasColumnType("integer")
                        .HasColumnName("tipologradouro");

                    b.HasKey("Enderecoid")
                        .HasName("endereco_pkey");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Entidade", b =>
                {
                    b.Property<int>("Entidadeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("entidadeid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Entidadeid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Entidadeid")
                        .HasName("entidade_pkey");

                    b.ToTable("entidade", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Entidade] \r\n\r\nfieldsgrid[entidadeid,nome:entidadeid]\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\nfieldsform[entidadeid,nome]\r\n\r\ngridtitle[Lista de Entidades]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Estadofisico", b =>
                {
                    b.Property<int>("Estadofisicoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("estadofisicoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Estadofisicoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Estadofisicoid")
                        .HasName("estadofisico_pkey");

                    b.ToTable("estadofisico", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Estado Físico]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Estado Físico]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Evento", b =>
                {
                    b.Property<int>("Eventoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("eventoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Eventoid"));

                    b.Property<DateOnly>("Dataevento")
                        .HasColumnType("date")
                        .HasColumnName("dataevento")
                        .HasComment("forminputlabel[Data-Evento] \r\nforminputsize[12]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Data-Evento] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[]");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'I'::character varying")
                        .HasComment("forminputlabel[Status] \r\nforminputsize[12]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Status] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Eventoid")
                        .HasName("evento_pkey");

                    b.ToTable("evento", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Evento]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Eventos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Exigencium", b =>
                {
                    b.Property<int>("Exigenciaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("exigenciaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Exigenciaid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<string>("Ordem")
                        .HasColumnType("character varying")
                        .HasColumnName("ordem");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Exigenciaid")
                        .HasName("exigencia_pkey");

                    b.ToTable("exigencia", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Extrato", b =>
                {
                    b.Property<int>("Extratoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("extratoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Extratoid"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<DateOnly?>("Dataprocesso")
                        .HasColumnType("date")
                        .HasColumnName("dataprocesso")
                        .HasComment("Data do Processo");

                    b.Property<int>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Inscricaoeconomica")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaoeconomica")
                        .HasComment("Empresa - Requerente");

                    b.Property<string>("Inscricaoimobiliaria")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaoimobiliaria")
                        .HasComment("Localidade pela inscrição imobiliária");

                    b.Property<int>("Numeroextrato")
                        .HasColumnType("integer")
                        .HasColumnName("numeroextrato");

                    b.Property<string>("Processo")
                        .HasColumnType("character varying")
                        .HasColumnName("processo")
                        .HasComment("Processo");

                    b.Property<int?>("Tipoanalise")
                        .HasColumnType("integer")
                        .HasColumnName("tipoanalise")
                        .HasComment("1-Autorização Definitiva\r\n2-Uso nao Conforme");

                    b.Property<int>("Tipoveiculodivulgacao")
                        .HasColumnType("integer")
                        .HasColumnName("tipoveiculodivulgacao")
                        .HasComment("Tipo de Veiculo de Divulgação");

                    b.Property<int>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Extratoid")
                        .HasName("extrato_pkey");

                    b.HasIndex("Tipoveiculodivulgacao");

                    b.ToTable("extrato", "divulgacao");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Faseobra", b =>
                {
                    b.Property<int>("Faseobraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("faseobraid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Faseobraid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Faseobraid")
                        .HasName("faseobra_pkey");

                    b.ToTable("faseobra", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Fase da Obra]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Fases da Obra]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Fiscal", b =>
                {
                    b.Property<int>("Fiscalid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fiscalid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Fiscalid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone")
                        .HasComment("forminputlabel[Telefone] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Telefone] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Fiscalid")
                        .HasName("fiscal_pkey");

                    b.ToTable("fiscal", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Fiscal]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Fiscais]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Fonterecurso", b =>
                {
                    b.Property<int>("Fonterecursoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fonterecursoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Fonterecursoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("sigla")
                        .HasComment("forminputlabel[Sigla] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Sigla] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Fonterecursoid")
                        .HasName("fonterecurso_pkey");

                    b.ToTable("fonterecurso", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Fonte Recurso]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Fontes de Recurso]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Grupo", b =>
                {
                    b.Property<int>("Grupoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("grupoid")
                        .HasComment("forminputlabel[Código] forminputsize[7]  columngridid[] columngridtitle[Código] columngridtype[ro] columngridsize[80] columngridalign[left] columngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Grupoid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] forminputsize[50]  columngridid[] columngridtitle[Nome] columngridtype[ro] columngridsize[*] columngridalign[left] columngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Grupoid")
                        .HasName("grupo_pk");

                    b.ToTable("grupo", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Grupo]   \r\nfieldsgrid[grupoid,nome:grupoid] \r\n\r\nfieldsform[grupoid,nome] \r\n\r\ngridtitle[Lista de Grupos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Grupousuario", b =>
                {
                    b.Property<int>("Grupousuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("grupousuarioid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Grupousuarioid"));

                    b.Property<int>("Grupo")
                        .HasColumnType("integer")
                        .HasColumnName("grupo")
                        .HasComment("forminputlabel[Grupo]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[grupo.nome]\r\ncolumngridtitle[Grupo]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema")
                        .HasComment("forminputlabel[Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[sistema.nome]\r\ncolumngridtitle[Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario")
                        .HasComment("forminputlabel[Usuário]\r\nforminputsize[50]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[usuarioid,nome,login,senha:usuarioid]\r\n\r\ncolumngridid[usuario.nome]\r\ncolumngridtitle[Usuário]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Grupousuarioid")
                        .HasName("grupousuario_pk");

                    b.HasIndex("Grupo");

                    b.HasIndex("Sistema");

                    b.HasIndex("Usuario");

                    b.ToTable("grupousuario", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Grupo / Usuário]\r\n\r\nfieldsgrid[grupousuarioid,usuario.nome,grupo.nome,sistema.nome:grupousuarioid]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter] \r\n\r\nfieldsform[grupousuarioid,usuario.usuarioid,usuario.nome,grupo.grupoid,grupo.nome,sistema.sistemaid,sistema.nome] \r\n\r\ngridtitle[Lista de Grupos / Usuário]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Historico", b =>
                {
                    b.Property<int>("Historicoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("historicoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Historicoid"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("autor");

                    b.Property<DateTime?>("Dataexportado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataexportado");

                    b.Property<DateTime>("Datahora")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahora");

                    b.Property<string>("Despacho")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("despacho");

                    b.Property<int?>("Exportado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("exportado");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Projeto")
                        .HasColumnType("integer")
                        .HasColumnName("projeto");

                    b.Property<int>("Sequencia")
                        .HasColumnType("integer")
                        .HasColumnName("sequencia");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Historicoid")
                        .HasName("historico_pkey");

                    b.HasIndex("Projeto");

                    b.ToTable("historico", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Logacesso", b =>
                {
                    b.Property<int>("Logacessoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("logacessoid")
                        .HasComment("forminputlabel[Código] forminputsize[7]  columngridid[] columngridtitle[Código] columngridtype[ro] columngridsize[80] columngridalign[left] columngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Logacessoid"));

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data")
                        .HasDefaultValueSql("now()")
                        .HasComment("forminputlabel[Data] forminputsize[50]  columngridid[] columngridtitle[Data] columngridtype[ro] columngridsize[100] columngridalign[left] columngridcolor[white]");

                    b.Property<int?>("Grupo")
                        .HasColumnType("integer")
                        .HasColumnName("grupo");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("ip")
                        .HasComment("forminputlabel[IP] forminputsize[50]  columngridid[] columngridtitle[IP] columngridtype[ro] columngridsize[100] columngridalign[left] columngridcolor[white]");

                    b.Property<int>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema")
                        .HasComment("forminputlabel[Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[sistema.nome]\r\ncolumngridtitle[Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario")
                        .HasComment("forminputlabel[Usuario]\r\nforminputsize[50]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[usuarioid,nome,login,senha:usuarioid]\r\n\r\ncolumngridid[usuario.nome]\r\ncolumngridtitle[Usuário]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Logacessoid")
                        .HasName("logacesso_pk");

                    b.HasIndex("Sistema");

                    b.HasIndex("Usuario");

                    b.ToTable("logacesso", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Log de acesso]   \r\nfieldsgrid[logacessoid,usuario.nome,sistema.nome,data,ip:logacessoid] \r\n\r\nfieldsform[logacessoid,usuario.usuarioid,usuario.nome,sistema.sistemaid,sistema.nome,data,ip] \r\n\r\ngridtitle[Lista de Logs de acesso]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Logradouro", b =>
                {
                    b.Property<int>("Logradouroid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("logradouroid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Logradouroid"));

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.HasKey("Logradouroid")
                        .HasName("logradouro_pkey");

                    b.ToTable("logradouro", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Logsistema", b =>
                {
                    b.Property<int>("Logsistemaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("logsistemaid")
                        .HasComment("forminputlabel[Código] forminputsize[7]  columngridid[] columngridtitle[Código] columngridtype[ro] columngridsize[80] columngridalign[left] columngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Logsistemaid"));

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data")
                        .HasDefaultValueSql("now()");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema")
                        .HasComment("forminputlabel[Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[sistema.nome]\r\ncolumngridtitle[Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("versao")
                        .HasComment("forminputlabel[Versão] forminputsize[50]  columngridid[] columngridtitle[Versão] columngridtype[ro] columngridsize[100] columngridalign[left] columngridcolor[white]");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Logsistemaid")
                        .HasName("logsistema_pk");

                    b.HasIndex("Sistema");

                    b.ToTable("logsistema", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Log do sistema]   \r\nfieldsgrid[logsistemaid,sistema.nome,versao,data:logsistemaid] \r\n\r\nfieldsform[logsistemaid,sistema.sistemaid,sistema.nome,versao,data] \r\n\r\ngridtitle[Lista de Logs do sistema]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Mensagem", b =>
                {
                    b.Property<int>("Mensagemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mensagemid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Mensagemid"));

                    b.Property<DateTime>("Datahora")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahora");

                    b.Property<int>("Grupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupo");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<int>("Lida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("lida");

                    b.Property<int>("Projeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("projeto");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying")
                        .HasColumnName("texto")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying")
                        .HasColumnName("usuario")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Mensagemid")
                        .HasName("mensagem_pkey");

                    b.ToTable("mensagem", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ministerio", b =>
                {
                    b.Property<int>("Ministerioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ministerioid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ministerioid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("sigla")
                        .HasComment("forminputlabel[Sigla] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Sigla] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Ministerioid")
                        .HasName("ministerio_pkey");

                    b.ToTable("ministerio", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Ministério]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Ministérios]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulo", b =>
                {
                    b.Property<int>("Moduloid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("moduloid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Moduloid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[50]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Moduloid")
                        .HasName("modulo_pk");

                    b.ToTable("modulo", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Módulo]   \r\nfieldsgrid[moduloid,nome:moduloid] \r\n\r\nfieldsform[moduloid,nome] \r\n\r\ngridtitle[Lista de Módulos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulogrupo", b =>
                {
                    b.Property<int>("Modulogrupoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("modulogrupoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Modulogrupoid"));

                    b.Property<int>("Grupo")
                        .HasColumnType("integer")
                        .HasColumnName("grupo")
                        .HasComment("forminputlabel[Grupo]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[grupo.nome]\r\ncolumngridtitle[Grupo]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Imagemtopo")
                        .HasColumnType("character varying")
                        .HasColumnName("imagemtopo");

                    b.Property<string>("Menu")
                        .HasColumnType("character varying")
                        .HasColumnName("menu")
                        .HasComment("forminputlabel[MENU] \r\nforminputsize[50]  \r\n\r\ngeragridmain[false]");

                    b.Property<int>("Modulosistema")
                        .HasColumnType("integer")
                        .HasColumnName("modulosistema")
                        .HasComment("forminputlabel[Módulo Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[modulo.nome]\r\n\r\ncolumngridid[modulosistema.modulo.nome]\r\ncolumngridtitle[Módulo Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Modulogrupoid")
                        .HasName("modulogrupo_pk");

                    b.HasIndex("Grupo");

                    b.HasIndex("Modulosistema");

                    b.ToTable("modulogrupo", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Módulos / Grupo]   \r\nfieldsgrid[modulogrupoid,grupo.nome,modulosistema.modulo.nome,menu:modulogrupoid] \r\n\r\nfieldsform[modulogrupoid,grupo.grupoid,grupo.nome,modulosistema.modulosistemaid,modulosistema.modulo.nome,menu] \r\n\r\ngridtitle[Lista de Módulos / Grupo]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulosistema", b =>
                {
                    b.Property<int>("Modulosistemaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("modulosistemaid")
                        .HasComment("forminputlabel[Código] forminputsize[7]  columngridid[] columngridtitle[Código] columngridtype[ro] columngridsize[80] columngridalign[left] columngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Modulosistemaid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int>("Manutencao")
                        .HasColumnType("integer")
                        .HasColumnName("manutencao");

                    b.Property<int>("Modulo")
                        .HasColumnType("integer")
                        .HasColumnName("modulo")
                        .HasComment("forminputlabel[Módulo]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[modulo.nome]\r\ncolumngridtitle[Módulo]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema")
                        .HasComment("forminputlabel[Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[sistema.nome]\r\ncolumngridtitle[Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Modulosistemaid")
                        .HasName("modulosistema_pk");

                    b.HasIndex("Modulo");

                    b.HasIndex("Sistema");

                    b.ToTable("modulosistema", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Módulos / Sistema]   \r\nfieldsgrid[modulosistemaid,modulo.nome,sistema.nome:modulosistemaid] \r\n\r\n\r\nfieldsform[modulosistemaid,modulo.moduloid,modulo.nome,sistema.sistemaid,sistema.nome,manutencao] \r\n\r\ngridtitle[Lista de Módulos / Sistema]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulosistemausuario", b =>
                {
                    b.Property<int>("Modulosistemausuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("modulosistemausuarioid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Modulosistemausuarioid"));

                    b.Property<string>("Denymodulo")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("denymodulo")
                        .HasComment("forminputlabel[DenyModulo]\r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Grantmodulo")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("grantmodulo")
                        .HasComment("forminputlabel[GrantModulo]\r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int>("Modulosistema")
                        .HasColumnType("integer")
                        .HasColumnName("modulosistema")
                        .HasComment("forminputlabel[ModuloSistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[modulosistema.modulo.nome]\r\n\r\ngeragridmain[true]\r\n\r\ncolumngridid[modulosistema.modulo.nome]\r\ncolumngridtitle[Modulo Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[180]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario")
                        .HasComment("forminputlabel[Usuário]\r\nforminputsize[50]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[usuarioid,nome,login,senha:usuarioid]\r\n\r\ncolumngridid[usuario.nome]\r\ncolumngridtitle[Usuário]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Modulosistemausuarioid")
                        .HasName("modulosistemausuario_pkey");

                    b.HasIndex("Modulosistema");

                    b.HasIndex("Usuario");

                    b.ToTable("modulosistemausuario", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Modulo/ Sistema / Usuário]   \r\nfieldsgrid[modulosistemausuarioid,modulosistema.modulo.nome,usuario.nome:modulosistemausuarioid] \r\n\r\nfieldsform[modulosistemausuarioid,modulosistema.modulosistemaid,modulosistema.modulo.nome,usuario.usuarioid,usuario.nome,grantmodulo,denymodulo] \r\n\r\ngridtitle[Lista de Modulo/ Sistema / Usuário]   ");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Natureza", b =>
                {
                    b.Property<int>("Naturezaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("naturezaid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Naturezaid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Naturezaid")
                        .HasName("natureza_pkey");

                    b.ToTable("natureza", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Natureza\r\n\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\n\r\ngridtitle[Lista de Natureza]\r\n");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Nomecoluna", b =>
                {
                    b.Property<int>("Nomecolunaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("nomecolunaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Nomecolunaid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo")
                        .HasComment("forminputlabel[Resíduo]\r\nforminputsize[180]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[residuo.nome]\r\n\r\ncolumngridid[residuo.nome]\r\ncolumngridtitle[Resíduo]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Tipocoluna")
                        .HasColumnType("integer")
                        .HasColumnName("tipocoluna")
                        .HasComment("0-Integer / 1-String\r\n\r\nforminputlabel[Tipo Coluna]\r\nforminputsize[30]\r\nforminputclass[required]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Nomecolunaid")
                        .HasName("nomecoluna_pkey");

                    b.HasIndex("Residuo");

                    b.ToTable("nomecoluna", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Nome de Coluna]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Nomes de Coluna]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Numeroprocesso", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Processo")
                        .HasColumnType("integer")
                        .HasColumnName("processo");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Ano")
                        .HasName("numeroprocesso_pkey");

                    b.ToTable("numeroprocesso", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obra", b =>
                {
                    b.Property<int>("Obraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("obraid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Obraid"));

                    b.Property<int?>("Anoemenda")
                        .HasColumnType("integer")
                        .HasColumnName("anoemenda");

                    b.Property<int>("Bairro")
                        .HasColumnType("integer")
                        .HasColumnName("bairro")
                        .HasComment("forminputlabel[Bairro] \r\nforminputsize[100]\r\n\r\nsearchmode[popup] \r\npopupresultfield[bairro.nome]\r\npopupfieldsgrid[bairroid,nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Bairro] \r\ncolumngridtype[ro] \r\ncolumngridsize[100] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Classificacao")
                        .HasColumnType("integer")
                        .HasColumnName("classificacao")
                        .HasComment("forminputlabel[Classificação] \r\nforminputsize[100]\r\n\r\nsearchmode[combobox] \r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[70] \r\ncolumngridtitle[Classificação] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Contratado")
                        .HasColumnType("integer")
                        .HasColumnName("contratado")
                        .HasComment("forminputlabel[Contratado] \r\nforminputsize[100]\r\n\r\nsearchmode[combobox] \r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Contratado] \r\ncolumngridtype[ro] \r\ncolumngridsize[70] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<DateOnly?>("Datacadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("datacadastro")
                        .HasDefaultValueSql("('now'::text)::date")
                        .HasComment("forminputlabel[Data Cadastro] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Data Cadastro] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<DateOnly?>("Dataprevisaoentrega")
                        .HasColumnType("date")
                        .HasColumnName("dataprevisaoentrega")
                        .HasComment("forminputlabel[Data Previsão Entrega] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Data Previsão Entrega] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("descricao")
                        .HasComment("forminputlabel[Descrição] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Descrição] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Endereco")
                        .HasColumnType("character varying")
                        .HasColumnName("endereco")
                        .HasComment("forminputlabel[Endereço] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Endereço] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Evento")
                        .HasColumnType("integer")
                        .HasColumnName("evento");

                    b.Property<int?>("Faseobra")
                        .HasColumnType("integer")
                        .HasColumnName("faseobra")
                        .HasComment("forminputlabel[Fase da Obra] \r\nforminputsize[50]\r\n\r\nsearchmode[combobox] \r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Fase da Obra] \r\ncolumngridtype[ro] \r\ncolumngridsize[70] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Fiscal")
                        .HasColumnType("integer")
                        .HasColumnName("fiscal")
                        .HasComment("forminputlabel[Fiscal] \r\nforminputsize[100]\r\n\r\nsearchmode[combobox] \r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Fiscal] \r\ncolumngridtype[ro] \r\ncolumngridsize[70] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Fonterecurso")
                        .HasColumnType("integer")
                        .HasColumnName("fonterecurso");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Latitude")
                        .HasColumnType("character varying")
                        .HasColumnName("latitude")
                        .HasComment("forminputlabel[Latitude] \r\nforminputsize[20]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Latitude] \r\ncolumngridtype[ro] \r\ncolumngridsize[40] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Longitude")
                        .HasColumnType("character varying")
                        .HasColumnName("longitude")
                        .HasComment("forminputlabel[Longitude] \r\nforminputsize[20]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Longitude] \r\ncolumngridtype[ro] \r\ncolumngridsize[40] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Ministerio")
                        .HasColumnType("integer")
                        .HasColumnName("ministerio");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero")
                        .HasComment("forminputlabel[Número] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Número] \r\ncolumngridtype[ro] \r\ncolumngridsize[30] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Recurso")
                        .HasColumnType("integer")
                        .HasColumnName("recurso");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("forminputlabel[Status] \r\nforminputsize[20]\r\n\r\nsearchmode[combobox] \r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Status] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<decimal?>("Valorcontrapartida")
                        .HasPrecision(30, 2)
                        .HasColumnType("numeric(30,2)")
                        .HasColumnName("valorcontrapartida")
                        .HasComment("forminputlabel[Valor Contra Partida] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Valor Contra Partida]\r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<decimal?>("Valorfinanciamento")
                        .HasPrecision(30, 2)
                        .HasColumnType("numeric(30,2)")
                        .HasColumnName("valorfinanciamento")
                        .HasComment("forminputlabel[Valor Financiamento] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Valor Financiamento]\r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<decimal?>("Valorinvestimento")
                        .HasPrecision(30, 2)
                        .HasColumnType("numeric(30,2)")
                        .HasColumnName("valorinvestimento")
                        .HasComment("forminputlabel[Valor Investimento] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Valor Investimento]\r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<decimal?>("Valorinvestimentopre")
                        .HasPrecision(30, 2)
                        .HasColumnType("numeric(30,2)")
                        .HasColumnName("valorinvestimentopre")
                        .HasComment("forminputlabel[Valor Investimento] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Valor Investimento]\r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<decimal?>("Valorrepasse")
                        .HasPrecision(30, 2)
                        .HasColumnType("numeric(30,2)")
                        .HasColumnName("valorrepasse")
                        .HasComment("forminputlabel[Valor Repasse] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Valor Repasse]\r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Obraid")
                        .HasName("obra_pkey");

                    b.HasIndex("Bairro");

                    b.HasIndex("Classificacao");

                    b.HasIndex("Contratado");

                    b.HasIndex("Evento");

                    b.HasIndex("Faseobra");

                    b.HasIndex("Fiscal");

                    b.HasIndex("Fonterecurso");

                    b.HasIndex("Ministerio");

                    b.HasIndex("Recurso");

                    b.HasIndex("Status");

                    b.ToTable("obra", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro do Obra]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Obras]\r\n\r\nmasterdetails[true]\r\ndetails[obradata,obraandamento]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obraandamento", b =>
                {
                    b.Property<int>("Obraandamentoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("obraandamentoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Obraandamentoid"));

                    b.Property<DateOnly>("Dataandamento")
                        .HasColumnType("date")
                        .HasColumnName("dataandamento")
                        .HasComment("forminputlabel[Data] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Data] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<DateOnly?>("Dataprazo")
                        .HasColumnType("date")
                        .HasColumnName("dataprazo")
                        .HasComment("forminputlabel[Data Prazo] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Data-Prazo] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<DateOnly?>("Datasituacao")
                        .HasColumnType("date")
                        .HasColumnName("datasituacao")
                        .HasComment("forminputlabel[Data Situação] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Data Situação] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Obra")
                        .HasColumnType("integer")
                        .HasColumnName("obra")
                        .HasComment("forminputlabel[Obra] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Obra] \r\ncolumngridtype[ro] \r\ncolumngridsize[10] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("obs")
                        .HasComment("forminputlabel[Observação] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Observação] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Situacaoprazo")
                        .HasColumnType("integer")
                        .HasColumnName("situacaoprazo")
                        .HasComment("1 - Andamento\r\n2 - Concluída\r\n3 - Cancelada\r\n\r\nforminputlabel[Situação] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Situação] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Obraandamentoid")
                        .HasName("obraandamento_pkey");

                    b.HasIndex("Obra");

                    b.ToTable("obraandamento", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro do Andamento da Obra]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Andamentos da Obra]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obradatum", b =>
                {
                    b.Property<int>("Obradataid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("obradataid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Obradataid"));

                    b.Property<string>("Controle")
                        .HasColumnType("character varying")
                        .HasColumnName("controle")
                        .HasComment("forminputlabel[Nº Controle] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nº Controle] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data")
                        .HasComment("forminputlabel[Data] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Data] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Obra")
                        .HasColumnType("integer")
                        .HasColumnName("obra")
                        .HasComment("forminputlabel[Obra] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Obra] \r\ncolumngridtype[ro] \r\ncolumngridsize[10] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Obs")
                        .HasColumnType("character varying")
                        .HasColumnName("obs")
                        .HasComment("forminputlabel[Observação] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Observação] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("forminputlabel[Status] \r\nforminputsize[20]\r\n\r\nsearchmode[combobox] \r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Status] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Tipocontrole")
                        .HasColumnType("integer")
                        .HasColumnName("tipocontrole")
                        .HasComment("forminputlabel[Tipo Controle] \r\nforminputsize[20]\r\n\r\nsearchmode[combobox] \r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[] \r\ncolumngridtitle[Tipo Controle] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Obradataid")
                        .HasName("obradata_pkey");

                    b.HasIndex("Obra");

                    b.HasIndex("Status");

                    b.HasIndex("Tipocontrole");

                    b.ToTable("obradata", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro do Andamento da Obra]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Andamentos da Obra]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obraevento", b =>
                {
                    b.Property<int>("Obraeventoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("obraeventoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Obraeventoid"));

                    b.Property<int>("Evento")
                        .HasColumnType("integer")
                        .HasColumnName("evento")
                        .HasComment("forminputlabel[Evento]\r\nforminputsize[70]\r\n\r\nsearchmode[popup]\r\npopupresultfield[evento.nome]\r\npopupfieldsgrid[eventoid,nome]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Evento]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Obra")
                        .HasColumnType("integer")
                        .HasColumnName("obra")
                        .HasComment("geragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Obraeventoid")
                        .HasName("obraevento_pkey");

                    b.HasIndex("Evento");

                    b.HasIndex("Obra");

                    b.ToTable("obraevento", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Obra-Evento]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Obra-Eventos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obraparlamentar", b =>
                {
                    b.Property<int>("Obraparlamentarid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("obraparlamentarid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Obraparlamentarid"));

                    b.Property<string>("Anoemenda")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("anoemenda");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Obra")
                        .HasColumnType("integer")
                        .HasColumnName("obra")
                        .HasComment("geragridmain[false]");

                    b.Property<int>("Parlamentar")
                        .HasColumnType("integer")
                        .HasColumnName("parlamentar")
                        .HasComment("forminputlabel[Parlamentar]\r\nforminputsize[70]\r\n\r\nsearchmode[popup]\r\npopupresultfield[parlamentar.nome]\r\npopupfieldsgrid[parlamentarid,nome]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Parlamentar]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[]");

                    b.Property<string>("Tipo")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("tipo");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Obraparlamentarid")
                        .HasName("obraparlamentar_pkey");

                    b.HasIndex("Obra");

                    b.HasIndex("Parlamentar");

                    b.ToTable("obraparlamentar", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Obra-Parlamentar]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Obra-Parlamentares]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ocorrencium", b =>
                {
                    b.Property<int>("Ocorrenciaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ocorrenciaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ocorrenciaid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Ocorrenciaid")
                        .HasName("ocorrencia_pkey");

                    b.ToTable("ocorrencia", "divulgacao", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Ocorrência]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Ocorrências]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Parlamentar", b =>
                {
                    b.Property<int>("Parlamentarid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("parlamentarid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Parlamentarid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[]");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'I'::character varying")
                        .HasComment("forminputlabel[Status] \r\nforminputsize[12]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Status] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[]");

                    b.Property<int?>("Tipomandato")
                        .HasColumnType("integer")
                        .HasColumnName("tipomandato")
                        .HasComment("forminputlabel[Tipo Mandato]\r\nforminputsize[150]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Tipo Mandato]\r\ncolumngridtype[ro]\r\ncolumngridsize[70]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Parlamentarid")
                        .HasName("parlamentar_pkey");

                    b.HasIndex("Tipomandato");

                    b.ToTable("parlamentar", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Parlamentar]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Parlamentares]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Pedidoped", b =>
                {
                    b.Property<int>("Codigoped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codigoped")
                        .HasComment("Código do pedido");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigoped"));

                    b.Property<string>("Bairroped")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bairroped")
                        .HasComment("Bairro do pedido");

                    b.Property<string>("Cepped")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cepped")
                        .HasComment("CEP do solicitante no pedido");

                    b.Property<int?>("Codigomic")
                        .HasColumnType("integer")
                        .HasColumnName("codigomic")
                        .HasComment("Micro-região");

                    b.Property<int?>("Codigoori")
                        .HasColumnType("integer")
                        .HasColumnName("codigoori")
                        .HasComment("Origem do Pedido");

                    b.Property<int?>("Codigosol")
                        .HasColumnType("integer")
                        .HasColumnName("codigosol")
                        .HasComment("Solicitante do pedido");

                    b.Property<int?>("Codigotpi")
                        .HasColumnType("integer")
                        .HasColumnName("codigotpi")
                        .HasComment("Tipo do Imovel do pedido");

                    b.Property<int?>("Codigotps")
                        .HasColumnType("integer")
                        .HasColumnName("codigotps")
                        .HasComment("Tipo da Solicitacao");

                    b.Property<string>("Complemped")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("complemped")
                        .HasComment("Complemento do endereço do pedido");

                    b.Property<DateTime?>("Datacadped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadped")
                        .HasDefaultValueSql("now()")
                        .HasComment("Data de cadastro do pedido");

                    b.Property<string>("Justificaped")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("justificaped")
                        .HasComment("Justificativa do pedido");

                    b.Property<string>("Loteped")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("loteped")
                        .HasComment("Lote do pedido");

                    b.Property<string>("Numeroped")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numeroped")
                        .HasComment("Numero da rua do pedido");

                    b.Property<string>("Processoped")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("processoped")
                        .HasComment("Numero do processo ou numero de identificação do pedido.");

                    b.Property<string>("Quadraped")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("quadraped")
                        .HasComment("Quadra do pedido");

                    b.Property<string>("Ruaped")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ruaped")
                        .HasComment("Rua do pedido");

                    b.HasKey("Codigoped")
                        .HasName("pedidoped_pkey");

                    b.ToTable("pedidoped", "vistoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Permissaoentidade", b =>
                {
                    b.Property<int>("Permissaoentidadeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("permissaoentidadeid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Permissaoentidadeid"));

                    b.Property<string>("Denyabas")
                        .HasColumnType("character varying")
                        .HasColumnName("denyabas");

                    b.Property<string>("Denycolumnsgrid")
                        .HasColumnType("character varying")
                        .HasColumnName("denycolumnsgrid");

                    b.Property<string>("Denycoluna")
                        .HasColumnType("character varying")
                        .HasColumnName("denycoluna");

                    b.Property<string>("Denydelete")
                        .HasColumnType("character varying")
                        .HasColumnName("denydelete");

                    b.Property<string>("Denyextrabuttons")
                        .HasColumnType("character varying")
                        .HasColumnName("denyextrabuttons");

                    b.Property<string>("Denyfieldsform")
                        .HasColumnType("character varying")
                        .HasColumnName("denyfieldsform");

                    b.Property<string>("Denyupdate")
                        .HasColumnType("character varying")
                        .HasColumnName("denyupdate");

                    b.Property<string>("Denyview")
                        .HasColumnType("character varying")
                        .HasColumnName("denyview");

                    b.Property<string>("Denyviewcoluna")
                        .HasColumnType("character varying")
                        .HasColumnName("denyviewcoluna");

                    b.Property<int>("Entidade")
                        .HasColumnType("integer")
                        .HasColumnName("entidade")
                        .HasComment("forminputlabel[Entidade]\r\nforminputsize[50]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[entidadeid,nome:entidadeid]\r\n\r\ngeragridmain[true]\r\n\r\ncolumngridid[entidade.nome]\r\ncolumngridtitle[Entidade]\r\ncolumngridtype[ro]\r\ncolumngridsize[180]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Extrasinfo")
                        .HasColumnType("character varying")
                        .HasColumnName("extrasinfo");

                    b.Property<string>("Filtraunidade")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("filtraunidade");

                    b.Property<string>("Grantcoluna")
                        .HasColumnType("character varying")
                        .HasColumnName("grantcoluna");

                    b.Property<string>("Grantdelete")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("grantdelete");

                    b.Property<string>("Grantinsert")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("grantinsert");

                    b.Property<string>("Grantselect")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("grantselect");

                    b.Property<string>("Grantupdate")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("grantupdate");

                    b.Property<string>("Grantviewcoluna")
                        .HasColumnType("character varying")
                        .HasColumnName("grantviewcoluna");

                    b.Property<int>("Grupo")
                        .HasColumnType("integer")
                        .HasColumnName("grupo")
                        .HasComment("forminputlabel[Grupo]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[true]\r\n\r\ncolumngridid[grupo.nome]\r\ncolumngridtitle[Grupo]\r\ncolumngridtype[ro]\r\ncolumngridsize[180]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Pathunidade")
                        .HasColumnType("character varying")
                        .HasColumnName("pathunidade");

                    b.Property<string>("Pathusuario")
                        .HasColumnType("character varying")
                        .HasColumnName("pathusuario");

                    b.Property<string>("Physicaldeletion")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("physicaldeletion");

                    b.Property<int>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema")
                        .HasComment("forminputlabel[Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[true]\r\n\r\ncolumngridid[sistema.nome]\r\ncolumngridtitle[Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[180]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Permissaoentidadeid")
                        .HasName("permissaoentidade_pkey");

                    b.HasIndex("Entidade");

                    b.HasIndex("Grupo");

                    b.HasIndex("Sistema");

                    b.ToTable("permissaoentidade", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Permissão/Entidade] \r\n\r\nfieldsgrid[permissaoentidadeid,sistema.nome,entidade.nome,grupo.nome:permissaoentidadeid]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter] \r\n\r\nfieldsform[permissaoentidadeid,sistema.sistemaid,sistema.nome,entidade.entidadeid,entidade.nome,grupo.grupoid,grupo.nome,grantentidade,denyentidade,grantcoluna,denycoluna,grantviewcoluna,denyviewcoluna] \r\n\r\ngridtitle[Lista de Permissão/Entidade]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Pessoa", b =>
                {
                    b.Property<int>("Pessoaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pessoaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Pessoaid"));

                    b.Property<string>("Cpf")
                        .HasColumnType("character varying")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<int?>("Endereco")
                        .HasColumnType("integer")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<string>("Rg")
                        .HasColumnType("character varying")
                        .HasColumnName("rg");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("character varying")
                        .HasColumnName("sobrenome");

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone");

                    b.HasKey("Pessoaid")
                        .HasName("pessoa_pkey");

                    b.HasIndex("Endereco");

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Prfage", b =>
                {
                    b.Property<int>("Codprf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codprf")
                        .HasDefaultValueSql("nextval(('\"agenda\".\"prfage_codprf_seq\"'::text)::regclass)");

                    b.Property<int?>("Aceprf")
                        .HasColumnType("integer")
                        .HasColumnName("aceprf");

                    b.Property<int?>("Arqprf")
                        .HasColumnType("integer")
                        .HasColumnName("arqprf")
                        .HasComment("ID DO ARQUIVO ANEXADO NA TAB ARQUIVO");

                    b.Property<string>("Baiprf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("baiprf");

                    b.Property<string>("Cepprf")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cepprf");

                    b.Property<string>("Comprf")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("comprf");

                    b.Property<int?>("Conprf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("conprf")
                        .HasComment("CONFIRMACAO DE CHECK DO EMAIL DO PROFISSIONAL");

                    b.Property<string>("Cpfprf")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpfprf");

                    b.Property<long?>("Creprf")
                        .HasColumnType("bigint")
                        .HasColumnName("creprf");

                    b.Property<string>("Emlprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("emlprf");

                    b.Property<string>("Extprf")
                        .HasColumnType("character varying")
                        .HasColumnName("extprf")
                        .HasComment("EXTENSAO DO ARQUIVO ANEXADO");

                    b.Property<string>("Fonprf")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("fonprf");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<long?>("Insprf")
                        .HasColumnType("bigint")
                        .HasColumnName("insprf");

                    b.Property<string>("Jusprf")
                        .HasColumnType("character varying")
                        .HasColumnName("jusprf")
                        .HasComment("JUSTIFICATIVA DE ACESSO DO PROF DE FORA!");

                    b.Property<string>("Logprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("logprf");

                    b.Property<string>("Nlcprf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nlcprf");

                    b.Property<string>("Nomprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomprf");

                    b.Property<int?>("Numprf")
                        .HasColumnType("integer")
                        .HasColumnName("numprf");

                    b.Property<string>("Senprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("senprf");

                    b.Property<int>("Termoaceito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("termoaceito")
                        .HasComment("0 - Não Aceito / 1 - Aceito");

                    b.Property<string>("Tipprf")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("tipprf");

                    b.Property<string>("Titprf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("titprf");

                    b.Property<DateOnly?>("Uacprf")
                        .HasColumnType("date")
                        .HasColumnName("uacprf");

                    b.Property<string>("Ufcprf")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("ufcprf");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuario");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.Property<int?>("Visprf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("visprf");

                    b.HasKey("Codprf")
                        .HasName("prfage_pkey");

                    b.HasIndex("Usuario");

                    b.ToTable("prfage", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.PrfageTmp", b =>
                {
                    b.Property<int?>("Aceprf")
                        .HasColumnType("integer")
                        .HasColumnName("aceprf");

                    b.Property<string>("Baiprf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("baiprf");

                    b.Property<string>("Cepprf")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cepprf");

                    b.Property<int?>("Codprf")
                        .HasColumnType("integer")
                        .HasColumnName("codprf");

                    b.Property<string>("Comprf")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("comprf");

                    b.Property<string>("Cpfprf")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpfprf");

                    b.Property<long?>("Creprf")
                        .HasColumnType("bigint")
                        .HasColumnName("creprf");

                    b.Property<string>("Emlprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("emlprf");

                    b.Property<string>("Fonprf")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("fonprf");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<long?>("Insprf")
                        .HasColumnType("bigint")
                        .HasColumnName("insprf");

                    b.Property<string>("Logprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("logprf");

                    b.Property<string>("Nlcprf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nlcprf");

                    b.Property<string>("Nomprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomprf");

                    b.Property<int?>("Numprf")
                        .HasColumnType("integer")
                        .HasColumnName("numprf");

                    b.Property<string>("Senprf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("senprf");

                    b.Property<int>("Termoaceito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("termoaceito");

                    b.Property<string>("Tipprf")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("tipprf");

                    b.Property<string>("Titprf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("titprf");

                    b.Property<DateOnly?>("Uacprf")
                        .HasColumnType("date")
                        .HasColumnName("uacprf");

                    b.Property<string>("Ufcprf")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("ufcprf");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuario");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.Property<int?>("Visprf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("visprf");

                    b.ToTable("prfage_tmp", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Profissional", b =>
                {
                    b.Property<int>("Profissionalid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("profissionalid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Profissionalid"));

                    b.Property<string>("Inscricao")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricao");

                    b.Property<string>("Numerocre")
                        .HasColumnType("character varying")
                        .HasColumnName("numerocre");

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone");

                    b.Property<string>("Titulo")
                        .HasColumnType("character varying")
                        .HasColumnName("titulo");

                    b.Property<string>("Ufcre")
                        .HasColumnType("character varying")
                        .HasColumnName("ufcre");

                    b.HasKey("Profissionalid")
                        .HasName("profissional_pkey");

                    b.ToTable("profissional", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Profissional1", b =>
                {
                    b.Property<int>("Profissionalid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("profissionalid")
                        .HasComment("Código do profissional");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Profissionalid"));

                    b.Property<string>("Bairroend")
                        .HasColumnType("character varying")
                        .HasColumnName("bairroend")
                        .HasComment("Endereço bairro");

                    b.Property<string>("Cepend")
                        .HasColumnType("character varying")
                        .HasColumnName("cepend")
                        .HasComment("Endereço cep");

                    b.Property<string>("Cidadeend")
                        .HasColumnType("character varying")
                        .HasColumnName("cidadeend")
                        .HasComment("Endereço cidade");

                    b.Property<string>("Complend")
                        .HasColumnType("character varying")
                        .HasColumnName("complend")
                        .HasComment("Endereço complemento");

                    b.Property<string>("Cpfcnpj")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("cpfcnpj")
                        .HasComment("CPF ou CNPJ do profissional");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email")
                        .HasComment("email do profissional");

                    b.Property<string>("Estadoend")
                        .HasColumnType("character varying")
                        .HasColumnName("estadoend")
                        .HasComment("Endereço estado");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("inscricao")
                        .HasComment("Inscrição do profissional");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("Nome do profissional");

                    b.Property<string>("Numeroend")
                        .HasColumnType("character varying")
                        .HasColumnName("numeroend")
                        .HasComment("Endereço número");

                    b.Property<string>("Ruaend")
                        .HasColumnType("character varying")
                        .HasColumnName("ruaend")
                        .HasComment("Endereço rua");

                    b.Property<string>("Telefone1")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone1")
                        .HasComment("Telefone de contato 1");

                    b.Property<string>("Telefone2")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone2")
                        .HasComment("Telefone de contato 2");

                    b.HasKey("Profissionalid")
                        .HasName("profissional_pkey");

                    b.ToTable("profissional", "planurb");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projeto", b =>
                {
                    b.Property<int>("Projetoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("projetoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Projetoid"));

                    b.Property<string>("Alvara")
                        .HasColumnType("character varying")
                        .HasColumnName("alvara");

                    b.Property<int?>("Analista")
                        .HasColumnType("integer")
                        .HasColumnName("analista");

                    b.Property<int?>("Anolaudoavaliacao")
                        .HasColumnType("integer")
                        .HasColumnName("anolaudoavaliacao");

                    b.Property<decimal?>("Areaexcedente")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areaexcedente");

                    b.Property<decimal?>("Arealote")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("arealote");

                    b.Property<decimal?>("Areaprojecao")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areaprojecao");

                    b.Property<decimal?>("Areax")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areax");

                    b.Property<decimal?>("Areay")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areay");

                    b.Property<int?>("Assunto")
                        .HasColumnType("integer")
                        .HasColumnName("assunto");

                    b.Property<int?>("Assuntoalt")
                        .HasColumnType("integer")
                        .HasColumnName("assuntoalt");

                    b.Property<int?>("Assuntogrup")
                        .HasColumnType("integer")
                        .HasColumnName("assuntogrup");

                    b.Property<int?>("Atividade")
                        .HasColumnType("integer")
                        .HasColumnName("atividade");

                    b.Property<string>("Bairro")
                        .HasColumnType("character varying")
                        .HasColumnName("bairro");

                    b.Property<string>("Classificacao")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("classificacao")
                        .HasDefaultValueSql("'NOR'::character varying")
                        .HasComment("NOR = NORMAL(PADRAO)\r\nESP = ESPECIAL\r\nAPR = APROVE FACIL\nHAB = HABITE-SE LEGAL");

                    b.Property<string>("Cnpjempresa")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("cnpjempresa");

                    b.Property<int?>("Codificacao")
                        .HasColumnType("integer")
                        .HasColumnName("codificacao");

                    b.Property<long?>("Codseguranca")
                        .HasColumnType("bigint")
                        .HasColumnName("codseguranca");

                    b.Property<string>("Cpfprop1")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfprop1");

                    b.Property<string>("Cpfprop2")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfprop2");

                    b.Property<string>("Cpfprop3")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfprop3");

                    b.Property<string>("Cpfproprietario")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfproprietario");

                    b.Property<DateTime?>("Datacriacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacriacao")
                        .HasComment("forminputlabel[Data Criacao]\r\nforminputsize[30]\r\nforminputclass[datetime]\r\n\r\ngeragridmain[false]");

                    b.Property<DateTime?>("Dataencaminhamento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataencaminhamento");

                    b.Property<DateTime?>("Dataexportado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataexportado");

                    b.Property<DateTime?>("Datahomologacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahomologacao")
                        .HasComment("forminputlabel[Data Homologacao]\r\nforminputsize[30]\r\nforminputclass[datetime]\r\n\r\ngeragridmain[false]");

                    b.Property<DateOnly?>("Datalaudoavaliacao")
                        .HasColumnType("date")
                        .HasColumnName("datalaudoavaliacao");

                    b.Property<DateTime?>("Dataulttram")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataulttram");

                    b.Property<string>("Despacho")
                        .HasColumnType("character varying")
                        .HasColumnName("despacho");

                    b.Property<string>("Emailproprietario")
                        .HasColumnType("character varying")
                        .HasColumnName("emailproprietario");

                    b.Property<string>("Enquadramento1")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento1");

                    b.Property<string>("Enquadramento2")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento2");

                    b.Property<string>("Enquadramento3")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento3");

                    b.Property<string>("Enquadramento4")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento4");

                    b.Property<string>("Enquadramento5")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento5");

                    b.Property<string>("Enquadramento6")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento6");

                    b.Property<string>("Enquadramentofinal")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramentofinal");

                    b.Property<int?>("Exportado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("exportado");

                    b.Property<int?>("Finalizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("finalizado");

                    b.Property<int?>("Fiscal")
                        .HasColumnType("integer")
                        .HasColumnName("fiscal");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Inscricao")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricao");

                    b.Property<string>("Lote")
                        .HasColumnType("character varying")
                        .HasColumnName("lote");

                    b.Property<string>("Lotedireita")
                        .HasColumnType("character varying")
                        .HasColumnName("lotedireita");

                    b.Property<string>("Loteesquerda")
                        .HasColumnType("character varying")
                        .HasColumnName("loteesquerda");

                    b.Property<string>("Lotefrente")
                        .HasColumnType("character varying")
                        .HasColumnName("lotefrente");

                    b.Property<string>("Lotefundo")
                        .HasColumnType("character varying")
                        .HasColumnName("lotefundo");

                    b.Property<int?>("Natureza")
                        .HasColumnType("integer")
                        .HasColumnName("natureza");

                    b.Property<string>("Numart")
                        .HasColumnType("character varying")
                        .HasColumnName("numart");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<int?>("Numerolaudoavaliacao")
                        .HasColumnType("integer")
                        .HasColumnName("numerolaudoavaliacao");

                    b.Property<string>("Processo")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("processo");

                    b.Property<string>("Processoexp")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("processoexp");

                    b.Property<string>("Procsubstituto")
                        .HasColumnType("character varying")
                        .HasColumnName("procsubstituto");

                    b.Property<int?>("Profissional")
                        .HasColumnType("integer")
                        .HasColumnName("profissional")
                        .HasComment("forminputlabel[Profissional]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Profissional]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Proprietario")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario");

                    b.Property<string>("Proprietario1")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario1");

                    b.Property<string>("Proprietario2")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario2");

                    b.Property<string>("Proprietario3")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario3");

                    b.Property<string>("Quadra")
                        .HasColumnType("character varying")
                        .HasColumnName("quadra");

                    b.Property<string>("Razaosocialempresa")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("razaosocialempresa");

                    b.Property<int?>("Regiao")
                        .HasColumnType("integer")
                        .HasColumnName("regiao");

                    b.Property<string>("Rua")
                        .HasColumnType("character varying")
                        .HasColumnName("rua");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("status")
                        .HasComment("0 - Configuracao - nao aparece em lugar nenuhm\r\n=================== TRIAGEM ================\r\n1 - Não analisado - Triagem(Primeira remessa enviada)	\r\n2 -  Ja analisei e retornei para o Profissional - Triagem (A remessa é analisada e retornada pela triagem.)\r\n3 - Voltou do Profissional corrigido - Triagem (A remessa é respondida pelo profissional (criação de uma nova remessa))\r\n==================== ANALISTA =================\r\n4 - Não analisado - Analista (Primeira remessa enviada)\r\n5 -  Ja analisei e retornei para o Profissional - Analista (A remessa é analisada e retornada pelo analista.)\r\n6 - Voltou do Profissional corrigido - Analista (A remessa é respondida pelo profissional (criação de uma nova remessa))\r\n=================== ADMINISTRADOR ===============\r\n7 - De acordo (Quando o analista gera a remessa final e envia arquivos para análise. Gera assinatura digital também. Profissional não pode ver a Remessa Final.)\r\n===================== DIRETOR ==================\r\n8 - Encaminhado ao Diretor (Quando o administrador confere os dados da remessa final e clica no botao encaminhar para diretor)\r\n9 - Aprovado (Quando o projeto foi efetivamente concluído e aceito. Profissional só visualizará a Remessa Final.)\r\n10 - Negado (Diretor retorna o projeto ao analista para corrigir os arquivos da Remessa Final.)");

                    b.Property<int?>("StatusAnistia")
                        .HasColumnType("integer")
                        .HasColumnName("status_anistia");

                    b.Property<string>("Telcontato")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("telcontato");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Usuaval")
                        .HasColumnType("character varying")
                        .HasColumnName("usuaval");

                    b.Property<decimal?>("Valorcontrapartida")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valorcontrapartida");

                    b.Property<string>("Valorcontrapartidaextenso")
                        .HasColumnType("character varying")
                        .HasColumnName("valorcontrapartidaextenso");

                    b.Property<decimal?>("Valormetroquadrado")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valormetroquadrado");

                    b.Property<string>("Valormetroquadradoextenso")
                        .HasColumnType("character varying")
                        .HasColumnName("valormetroquadradoextenso");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Zoneamento")
                        .HasColumnType("integer")
                        .HasColumnName("zoneamento");

                    b.HasKey("Projetoid")
                        .HasName("projeto_pkey");

                    b.HasIndex("Assunto");

                    b.HasIndex("Assuntoalt");

                    b.HasIndex("Atividade");

                    b.HasIndex("Codificacao");

                    b.HasIndex("Fiscal");

                    b.HasIndex("Natureza");

                    b.HasIndex("Profissional");

                    b.HasIndex("Regiao");

                    b.HasIndex("Zoneamento");

                    b.HasIndex(new[] { "Analista" }, "projeto_analista_idx");

                    b.HasIndex(new[] { "Codseguranca" }, "projeto_codseguranca_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Processo" }, "projeto_processo_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Processoexp" }, "projeto_processoexp_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Status" }, "projeto_status_idx");

                    b.HasIndex(new[] { "Processo" }, "projeto_teste");

                    b.ToTable("projeto", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Projetos]\r\n\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\n\r\ngridtitle[Lista de Projetos]\r\n\r\nmasterdetails[true]\r\ndetails[remessa]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projeto1", b =>
                {
                    b.Property<int>("Projetoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("projetoid")
                        .HasComment("Código do projeto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Projetoid"));

                    b.Property<int>("Assunto")
                        .HasColumnType("integer")
                        .HasColumnName("assunto")
                        .HasComment("Assunto do projeto");

                    b.Property<DateTime>("Datacadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadastro")
                        .HasDefaultValueSql("now()")
                        .HasComment("Data de cadastro");

                    b.Property<DateTime?>("Datahomologacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahomologacao")
                        .HasComment("Data de aprovação(homologação)");

                    b.Property<string>("Processo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("processo")
                        .HasComment("Número do processo");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("Status do projeto");

                    b.HasKey("Projetoid")
                        .HasName("projeto_pkey");

                    b.HasIndex("Assunto")
                        .HasDatabaseName("IX_projeto_assunto1");

                    b.HasIndex("Status");

                    b.ToTable("projeto", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projeto2", b =>
                {
                    b.Property<int>("Projetoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("projetoid")
                        .HasComment("Código do PROJETO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Projetoid"));

                    b.Property<DateTime>("Datacadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadastro")
                        .HasDefaultValueSql("now()")
                        .HasComment("Data de cadastro do Projeto");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("inscricao")
                        .HasComment("Inscrição Imobiliária");

                    b.HasKey("Projetoid")
                        .HasName("projeto_pkey");

                    b.ToTable("projeto", "planurb");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ProjetoAnistium", b =>
                {
                    b.Property<string>("Alvara")
                        .HasColumnType("character varying")
                        .HasColumnName("alvara");

                    b.Property<int?>("Analista")
                        .HasColumnType("integer")
                        .HasColumnName("analista");

                    b.Property<int?>("Anolaudoavaliacao")
                        .HasColumnType("integer")
                        .HasColumnName("anolaudoavaliacao");

                    b.Property<decimal?>("Areaexcedente")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areaexcedente");

                    b.Property<decimal?>("Arealote")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("arealote");

                    b.Property<decimal?>("Areaprojecao")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areaprojecao");

                    b.Property<decimal?>("Areax")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areax");

                    b.Property<decimal?>("Areay")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("areay");

                    b.Property<int?>("Assunto")
                        .HasColumnType("integer")
                        .HasColumnName("assunto");

                    b.Property<int?>("Assuntoalt")
                        .HasColumnType("integer")
                        .HasColumnName("assuntoalt");

                    b.Property<int?>("Assuntogrup")
                        .HasColumnType("integer")
                        .HasColumnName("assuntogrup");

                    b.Property<int?>("Atividade")
                        .HasColumnType("integer")
                        .HasColumnName("atividade");

                    b.Property<string>("Bairro")
                        .HasColumnType("character varying")
                        .HasColumnName("bairro");

                    b.Property<string>("Classificacao")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("classificacao")
                        .HasDefaultValueSql("'NOR'::character varying");

                    b.Property<string>("Cnpjempresa")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("cnpjempresa");

                    b.Property<int?>("Codificacao")
                        .HasColumnType("integer")
                        .HasColumnName("codificacao");

                    b.Property<long?>("Codseguranca")
                        .HasColumnType("bigint")
                        .HasColumnName("codseguranca");

                    b.Property<string>("Cpfprop1")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfprop1");

                    b.Property<string>("Cpfprop2")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfprop2");

                    b.Property<string>("Cpfprop3")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfprop3");

                    b.Property<string>("Cpfproprietario")
                        .HasColumnType("character varying")
                        .HasColumnName("cpfproprietario");

                    b.Property<DateTime?>("Datacriacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacriacao");

                    b.Property<DateTime?>("Dataencaminhamento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataencaminhamento");

                    b.Property<DateTime?>("Dataexportado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataexportado");

                    b.Property<DateTime?>("Datahomologacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahomologacao");

                    b.Property<DateOnly?>("Datalaudoavaliacao")
                        .HasColumnType("date")
                        .HasColumnName("datalaudoavaliacao");

                    b.Property<DateTime?>("Dataulttram")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataulttram");

                    b.Property<string>("Despacho")
                        .HasColumnType("character varying")
                        .HasColumnName("despacho");

                    b.Property<string>("Emailproprietario")
                        .HasColumnType("character varying")
                        .HasColumnName("emailproprietario");

                    b.Property<string>("Enquadramento1")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento1");

                    b.Property<string>("Enquadramento2")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento2");

                    b.Property<string>("Enquadramento3")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento3");

                    b.Property<string>("Enquadramento4")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento4");

                    b.Property<string>("Enquadramento5")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento5");

                    b.Property<string>("Enquadramento6")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramento6");

                    b.Property<string>("Enquadramentofinal")
                        .HasColumnType("character varying")
                        .HasColumnName("enquadramentofinal");

                    b.Property<int?>("Exportado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("exportado");

                    b.Property<int?>("Finalizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("finalizado");

                    b.Property<int?>("Fiscal")
                        .HasColumnType("integer")
                        .HasColumnName("fiscal");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Inscricao")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricao");

                    b.Property<string>("Lote")
                        .HasColumnType("character varying")
                        .HasColumnName("lote");

                    b.Property<string>("Lotedireita")
                        .HasColumnType("character varying")
                        .HasColumnName("lotedireita");

                    b.Property<string>("Loteesquerda")
                        .HasColumnType("character varying")
                        .HasColumnName("loteesquerda");

                    b.Property<string>("Lotefrente")
                        .HasColumnType("character varying")
                        .HasColumnName("lotefrente");

                    b.Property<string>("Lotefundo")
                        .HasColumnType("character varying")
                        .HasColumnName("lotefundo");

                    b.Property<int?>("Natureza")
                        .HasColumnType("integer")
                        .HasColumnName("natureza");

                    b.Property<string>("Numart")
                        .HasColumnType("character varying")
                        .HasColumnName("numart");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<int?>("Numerolaudoavaliacao")
                        .HasColumnType("integer")
                        .HasColumnName("numerolaudoavaliacao");

                    b.Property<string>("Processo")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("processo");

                    b.Property<string>("Processoexp")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("processoexp");

                    b.Property<string>("Procsubstituto")
                        .HasColumnType("character varying")
                        .HasColumnName("procsubstituto");

                    b.Property<int?>("Profissional")
                        .HasColumnType("integer")
                        .HasColumnName("profissional");

                    b.Property<int>("Projetoid")
                        .HasColumnType("integer")
                        .HasColumnName("projetoid");

                    b.Property<string>("Proprietario")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario");

                    b.Property<string>("Proprietario1")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario1");

                    b.Property<string>("Proprietario2")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario2");

                    b.Property<string>("Proprietario3")
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario3");

                    b.Property<string>("Quadra")
                        .HasColumnType("character varying")
                        .HasColumnName("quadra");

                    b.Property<string>("Razaosocialempresa")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("razaosocialempresa");

                    b.Property<int?>("Regiao")
                        .HasColumnType("integer")
                        .HasColumnName("regiao");

                    b.Property<string>("Rua")
                        .HasColumnType("character varying")
                        .HasColumnName("rua");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("status");

                    b.Property<string>("Telcontato")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("telcontato");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<string>("Usuaval")
                        .HasColumnType("character varying")
                        .HasColumnName("usuaval");

                    b.Property<decimal?>("Valorcontrapartida")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valorcontrapartida");

                    b.Property<string>("Valorcontrapartidaextenso")
                        .HasColumnType("character varying")
                        .HasColumnName("valorcontrapartidaextenso");

                    b.Property<decimal?>("Valormetroquadrado")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valormetroquadrado");

                    b.Property<string>("Valormetroquadradoextenso")
                        .HasColumnType("character varying")
                        .HasColumnName("valormetroquadradoextenso");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.Property<int?>("Zoneamento")
                        .HasColumnType("integer")
                        .HasColumnName("zoneamento");

                    b.ToTable("projeto_anistia", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projetoana", b =>
                {
                    b.Property<int>("Projetoanaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("projetoanaid")
                        .HasComment("Código do projetoana");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Projetoanaid"));

                    b.Property<int?>("Analista")
                        .HasColumnType("integer")
                        .HasColumnName("analista")
                        .HasComment("Analista vinculado");

                    b.Property<DateTime?>("Dataencaminhado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataencaminhado")
                        .HasComment("Data do encaminhamento");

                    b.Property<int?>("Projeto")
                        .HasColumnType("integer")
                        .HasColumnName("projeto")
                        .HasComment("Projeto vinculado");

                    b.HasKey("Projetoanaid")
                        .HasName("projetoana_pkey");

                    b.HasIndex("Analista");

                    b.HasIndex("Projeto");

                    b.ToTable("projetoana", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projetoin", b =>
                {
                    b.Property<int>("Projetoinsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("projetoinsid")
                        .HasComment("Código do projetoins");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Projetoinsid"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("bairro")
                        .HasComment("Bairro");

                    b.Property<string>("Compl")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("compl")
                        .HasComment("Complemento do logradouro");

                    b.Property<string>("Cpfcnpj")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("cpfcnpj")
                        .HasComment("CPF ou CNPJ do proprietario");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("inscricao")
                        .HasComment("Inscrição imobiliaria");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("logradouro")
                        .HasComment("Logradouro");

                    b.Property<string>("Lote")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("lote")
                        .HasComment("Lote");

                    b.Property<string>("Numero")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("numero")
                        .HasComment("Número do logradouro");

                    b.Property<string>("Parcelamento")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("parcelamento")
                        .HasComment("Parcelamento");

                    b.Property<int?>("Projeto")
                        .HasColumnType("integer")
                        .HasColumnName("projeto")
                        .HasComment("Projeto vinculado");

                    b.Property<string>("Proprietario")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("proprietario")
                        .HasComment("Proprietario");

                    b.Property<string>("Quadra")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("quadra")
                        .HasComment("Quadra");

                    b.Property<string>("Regiao")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("regiao")
                        .HasComment("Região");

                    b.HasKey("Projetoinsid")
                        .HasName("projetoins_pkey");

                    b.HasIndex("Projeto");

                    b.ToTable("projetoins", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Proprietario", b =>
                {
                    b.Property<int>("Proprietarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("proprietarioid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Proprietarioid"));

                    b.Property<string>("Celular")
                        .HasColumnType("character varying")
                        .HasColumnName("celular")
                        .HasComment("forminputlabel[Celular]\r\nforminputsize[12]\r\nforminputclass[phone]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Cep")
                        .HasColumnType("integer")
                        .HasColumnName("cep")
                        .HasComment("forminputlabel[CEP]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Complemento")
                        .HasColumnType("character varying")
                        .HasColumnName("complemento")
                        .HasComment("forminputlabel[Complemento]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero")
                        .HasComment("forminputlabel[N&ordm;]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Rua")
                        .HasColumnType("integer")
                        .HasColumnName("rua")
                        .HasComment("forminputlabel[Rua]\r\nforminputsize[12]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying")
                        .HasColumnName("telefone")
                        .HasComment("forminputlabel[Telefone]\r\nforminputsize[12]\r\nforminputclass[phone]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Proprietarioid")
                        .HasName("proprietario_pkey");

                    b.HasIndex("Rua");

                    b.ToTable("proprietario", "divulgacao", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Proprietário]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Proprietários]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Recibo", b =>
                {
                    b.Property<int>("Reciboid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("reciboid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Reciboid"));

                    b.Property<string>("Cpf")
                        .HasColumnType("character varying")
                        .HasColumnName("cpf");

                    b.Property<string>("Doador")
                        .HasColumnType("character varying")
                        .HasColumnName("doador");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<string>("Valor")
                        .HasColumnType("character varying")
                        .HasColumnName("valor");

                    b.HasKey("Reciboid")
                        .HasName("recibo_pkey");

                    b.ToTable("recibo", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Recurso", b =>
                {
                    b.Property<int>("Recursoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("recursoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Recursoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("sigla")
                        .HasComment("forminputlabel[Sigla] \r\nforminputsize[10]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Sigla] \r\ncolumngridtype[ro] \r\ncolumngridsize[20] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Recursoid")
                        .HasName("recurso_pkey");

                    b.ToTable("recurso", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Recurso]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Recursos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Regiao", b =>
                {
                    b.Property<int>("Regiaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("regiaoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Regiaoid"));

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nome");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("version");

                    b.HasKey("Regiaoid")
                        .HasName("regiao_pkey");

                    b.ToTable("regiao", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Regiaourbana", b =>
                {
                    b.Property<int>("Regiaourbanaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("regiaourbanaid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Regiaourbanaid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Regiaourbanaid")
                        .HasName("regiaourbana_pkey");

                    b.ToTable("regiaourbana", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Região Urbana]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Regiões Urbanas]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Regiaourbana1", b =>
                {
                    b.Property<int>("Regiaourbanaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("regiaourbanaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Regiaourbanaid"));

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Regiaourbanaid")
                        .HasName("regiaourbana_pkey");

                    b.ToTable("regiaourbana", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Relatorio", b =>
                {
                    b.Property<string>("Bairroimo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bairroimo");

                    b.Property<DateOnly?>("Dataexpedicao")
                        .HasColumnType("date")
                        .HasColumnName("dataexpedicao");

                    b.Property<string>("Enderecoempresa")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("enderecoempresa");

                    b.Property<string>("Enderecoimobiliaria")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("enderecoimobiliaria");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Inscricaoeconomica")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("inscricaoeconomica");

                    b.Property<string>("Inscricaoimobiliaria")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("inscricaoimobiliaria");

                    b.Property<string>("Nomeempresa")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nomeempresa");

                    b.Property<string>("Numeroautorizacao")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("numeroautorizacao");

                    b.Property<int?>("Ordem")
                        .HasColumnType("integer")
                        .HasColumnName("ordem");

                    b.Property<string>("Parcelamentoimo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("parcelamentoimo");

                    b.Property<DateOnly?>("Prazo")
                        .HasColumnType("date")
                        .HasColumnName("prazo");

                    b.Property<string>("Regiaoimo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("regiaoimo");

                    b.Property<int?>("Relatorioid")
                        .HasColumnType("integer")
                        .HasColumnName("relatorioid");

                    b.Property<string>("Tipodivulgacao")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tipodivulgacao");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.ToTable("relatorio", "divulgacao");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Relobra", b =>
                {
                    b.Property<string>("Anomes")
                        .HasColumnType("character varying")
                        .HasColumnName("anomes");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<string>("Tempo")
                        .HasColumnType("character varying")
                        .HasColumnName("tempo");

                    b.Property<int?>("Total")
                        .HasColumnType("integer")
                        .HasColumnName("total");

                    b.Property<decimal?>("Valorinvestimento")
                        .HasPrecision(30, 2)
                        .HasColumnType("numeric(30,2)")
                        .HasColumnName("valorinvestimento");

                    b.ToTable("relobra", "sisobra");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessa", b =>
                {
                    b.Property<int>("Remessaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("remessaid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Remessaid"));

                    b.Property<int?>("Analista")
                        .HasColumnType("integer")
                        .HasColumnName("analista");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data")
                        .HasComment("forminputlabel[Data Criacao] \r\nforminputsize[30]  \r\nforminputclass[datetime]\r\n\r\ngeragridmain[false]");

                    b.Property<DateTime?>("Datahoraexigencia")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoraexigencia");

                    b.Property<string>("Descricao")
                        .HasColumnType("character varying")
                        .HasColumnName("descricao")
                        .HasComment("forminputlabel[Descricao] \r\nforminputsize[80]  \r\n\r\ngeragridmain[false]");

                    b.Property<string>("Despacho")
                        .HasColumnType("character varying")
                        .HasColumnName("despacho");

                    b.Property<string>("Despachosemadur")
                        .HasColumnType("character varying")
                        .HasColumnName("despachosemadur");

                    b.Property<int?>("Exigido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("exigido");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Projeto")
                        .HasColumnType("integer")
                        .HasColumnName("projeto")
                        .HasComment("forminputlabel[Projeto]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[projeto.titulo]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Remetente")
                        .HasMaxLength(3)
                        .HasColumnType("character(3)")
                        .HasColumnName("remetente")
                        .IsFixedLength();

                    b.Property<string>("Status")
                        .HasColumnType("character varying")
                        .HasColumnName("status")
                        .HasComment("PROF - Remessa em construção pelo Profissional.\r\nCONF - Remessa Conferida pelo Ananalista/Supervisor\r\nFIN - Remessa finalizada pelo Profissional.\r\nRMF - Remessa Final");

                    b.Property<string>("Titulo")
                        .HasColumnType("character varying")
                        .HasColumnName("titulo")
                        .HasComment("forminputlabel[Titulo] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Titulo] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Remessaid")
                        .HasName("remessa_pkey");

                    b.HasIndex("Analista");

                    b.HasIndex("Projeto");

                    b.ToTable("remessa", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Remessa]\r\n\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\n\r\ngridtitle[Lista de Remessa]\r\n\r\nmasterdetails[true]\r\ndetails[documento]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessa1", b =>
                {
                    b.Property<int>("Remessaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("remessaid")
                        .HasComment("Código da remessa");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Remessaid"));

                    b.Property<int?>("Analista")
                        .HasColumnType("integer")
                        .HasColumnName("analista")
                        .HasComment("Analista vinculado que analisou a remessa");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data")
                        .HasDefaultValueSql("now()")
                        .HasComment("Data de cadastro da remessa");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("descricao")
                        .HasComment("Descrição da remessa");

                    b.Property<int>("Projeto")
                        .HasColumnType("integer")
                        .HasColumnName("projeto")
                        .HasComment("Projeto vinculado");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("status")
                        .HasComment("Status da remessa, FIN = FINALIZADA , ANA = EM ANALISE");

                    b.HasKey("Remessaid")
                        .HasName("remessa_pkey");

                    b.HasIndex("Analista")
                        .HasDatabaseName("IX_remessa_analista1");

                    b.HasIndex("Projeto")
                        .HasDatabaseName("IX_remessa_projeto1");

                    b.ToTable("remessa", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessaexigencium", b =>
                {
                    b.Property<int>("Remessaexigenciaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("remessaexigenciaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Remessaexigenciaid"));

                    b.Property<string>("Descricao")
                        .HasColumnType("character varying")
                        .HasColumnName("descricao");

                    b.Property<int?>("Exigencia")
                        .HasColumnType("integer")
                        .HasColumnName("exigencia");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<int>("Remessa")
                        .HasColumnType("integer")
                        .HasColumnName("remessa");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Remessaexigenciaid")
                        .HasName("remessaexigencia_pkey");

                    b.HasIndex("Exigencia");

                    b.HasIndex("Remessa");

                    b.ToTable("remessaexigencia", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Requerimento", b =>
                {
                    b.Property<int>("Requerimentoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("requerimentoid")
                        .HasComment("Código do requerimento");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Requerimentoid"));

                    b.Property<DateTime?>("Datacadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadastro")
                        .HasDefaultValueSql("now()")
                        .HasComment("Data de cadastro do requerimento");

                    b.Property<string>("Endereco")
                        .HasColumnType("character varying")
                        .HasColumnName("endereco")
                        .HasComment("Localização, endereço ou proximidade (exato ou aproximada)");

                    b.Property<int>("Profissional")
                        .HasColumnType("integer")
                        .HasColumnName("profissional")
                        .HasComment("Profissional requerente");

                    b.Property<string>("Proprietario")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("proprietario")
                        .HasComment("Proprietário requerente");

                    b.Property<string>("Telproprietario")
                        .HasColumnType("character varying")
                        .HasColumnName("telproprietario")
                        .HasComment("Telefone do proprietário");

                    b.Property<int?>("Tipoatividade")
                        .HasColumnType("integer")
                        .HasColumnName("tipoatividade")
                        .HasComment("Tipo de atividade/Empreendimento");

                    b.Property<string>("Tiporequerimento")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("tiporequerimento")
                        .HasComment("Tipo do requerimento: GDU GDR GUIV");

                    b.HasKey("Requerimentoid")
                        .HasName("requerimento_pkey");

                    b.HasIndex("Profissional");

                    b.ToTable("requerimento", "planurb");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuo", b =>
                {
                    b.Property<int>("Residuoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("residuoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Residuoid"));

                    b.Property<int>("Classe")
                        .HasColumnType("integer")
                        .HasColumnName("classe")
                        .HasComment("forminputlabel[Classe]\r\nforminputsize[180]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[classe.nome]\r\n\r\ncolumngridid[classe.nome]\r\ncolumngridtitle[Classe]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Reutilizacao")
                        .HasColumnType("integer")
                        .HasColumnName("reutilizacao")
                        .HasComment("0-Sim / 1-Não\r\n\r\nforminputlabel[Reutilização]\r\nforminputsize[30]\r\nforminputclass[required]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Residuoid")
                        .HasName("residuo_pkey");

                    b.HasIndex("Classe");

                    b.ToTable("residuo", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Resíduo]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Resíduos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuo1", b =>
                {
                    b.Property<int>("Residuoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("residuoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Residuoid"));

                    b.Property<int?>("Armazenamento")
                        .HasColumnType("integer")
                        .HasColumnName("armazenamento");

                    b.Property<int?>("Autotransporte")
                        .HasColumnType("integer")
                        .HasColumnName("autotransporte");

                    b.Property<int?>("Caracteristica")
                        .HasColumnType("integer")
                        .HasColumnName("caracteristica");

                    b.Property<int?>("Classificacao")
                        .HasColumnType("integer")
                        .HasColumnName("classificacao");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codigo");

                    b.Property<int>("Estadofisico")
                        .HasColumnType("integer")
                        .HasColumnName("estadofisico")
                        .HasComment("forminputlabel[Estado Físico]\r\nforminputsize[150]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[estadofisico.nome]\r\n\r\ncolumngridid[estadofisico.nome]\r\ncolumngridtitle[Estado Físico]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Numeroonu")
                        .HasColumnType("integer")
                        .HasColumnName("numeroonu");

                    b.Property<int?>("Numerorisco")
                        .HasColumnType("integer")
                        .HasColumnName("numerorisco");

                    b.Property<string>("Obs")
                        .HasColumnType("character varying")
                        .HasColumnName("obs")
                        .HasComment("forminputlabel[Observação]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Residuoid")
                        .HasName("residuo_pkey");

                    b.HasIndex("Armazenamento");

                    b.HasIndex("Caracteristica");

                    b.HasIndex("Classificacao");

                    b.HasIndex("Estadofisico");

                    b.ToTable("residuo", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Resíduo]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Resíduos]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuoarea", b =>
                {
                    b.Property<int>("Residuoareaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("residuoareaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Residuoareaid"));

                    b.Property<int>("Areareceptora")
                        .HasColumnType("integer")
                        .HasColumnName("areareceptora")
                        .HasComment("forminputlabel[Área Receptora]\r\nforminputsize[150]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[areareceptora.nome]\r\n\r\ncolumngridid[areareceptora.nome]\r\ncolumngridtitle[Área Receptora]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo")
                        .HasComment("forminputlabel[Resíduo]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[residuoid,nome:residuoid]\r\n\r\ncolumngridid[residuo.nome]\r\ncolumngridtitle[Resíduo]\r\ncolumngridtype[ro]\r\ncolumngridsize[150]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Residuoareaid")
                        .HasName("residuoarea_pkey");

                    b.HasIndex("Areareceptora");

                    b.HasIndex("Residuo");

                    b.ToTable("residuoarea", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Resíduo da Área Receptora]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Resíduos da Área Receptora]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuocaracteristica", b =>
                {
                    b.Property<int>("Residuocaracteristicaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("residuocaracteristicaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Residuocaracteristicaid"));

                    b.Property<int>("Caracteristica")
                        .HasColumnType("integer")
                        .HasColumnName("caracteristica")
                        .HasComment("forminputlabel[Característica]\r\nforminputsize[150]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[caracteristica.nome]\r\n\r\ncolumngridid[caracteristica.nome]\r\ncolumngridtitle[Característica]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo")
                        .HasComment("forminputlabel[Resíduo]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[residuoid,nome:residuoid]\r\n\r\ncolumngridid[residuo.nome]\r\ncolumngridtitle[Resíduo]\r\ncolumngridtype[ro]\r\ncolumngridsize[150]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Residuocaracteristicaid")
                        .HasName("residuocaracteristica_pkey");

                    b.HasIndex("Caracteristica");

                    b.HasIndex("Residuo");

                    b.ToTable("residuocaracteristica", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Característica de Resíduo]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Características do Resíduo]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosAreareceptora", b =>
                {
                    b.Property<int>("Areareceptoraid")
                        .HasColumnType("integer")
                        .HasColumnName("areareceptoraid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cep");

                    b.Property<int?>("Codigo")
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("complemento");

                    b.Property<int?>("Empresa")
                        .HasColumnType("integer")
                        .HasColumnName("empresa");

                    b.Property<double?>("Inscricaomunicipal")
                        .HasColumnType("double precision")
                        .HasColumnName("inscricaomunicipal");

                    b.Property<string>("Licencaambiental")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("licencaambiental");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("numero");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.Property<string>("Rua")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("rua");

                    b.Property<string>("Senha")
                        .HasColumnType("character varying")
                        .HasColumnName("senha");

                    b.Property<int?>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao");

                    b.Property<string>("Telefone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("telefone");

                    b.Property<int?>("Transportadora")
                        .HasColumnType("integer")
                        .HasColumnName("transportadora");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.Property<DateOnly?>("Validadelicenca")
                        .HasColumnType("date")
                        .HasColumnName("validadelicenca");

                    b.HasKey("Areareceptoraid", "Rev")
                        .HasName("residuos_areareceptora_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_areareceptora", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosArmazenamento", b =>
                {
                    b.Property<int>("Armazenamentoid")
                        .HasColumnType("integer")
                        .HasColumnName("armazenamentoid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.HasKey("Armazenamentoid", "Rev")
                        .HasName("residuos_armazenamento_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_armazenamento", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosCtr", b =>
                {
                    b.Property<int>("Ctrid")
                        .HasColumnType("integer")
                        .HasColumnName("ctrid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<int?>("Areareceptora")
                        .HasColumnType("integer")
                        .HasColumnName("areareceptora");

                    b.Property<int?>("Areareceptora2")
                        .HasColumnType("integer")
                        .HasColumnName("areareceptora2");

                    b.Property<int?>("Armazenamento")
                        .HasColumnType("integer")
                        .HasColumnName("armazenamento");

                    b.Property<int?>("Autotransporte")
                        .HasColumnType("integer")
                        .HasColumnName("autotransporte");

                    b.Property<int?>("Codigobaixa")
                        .HasColumnType("integer")
                        .HasColumnName("codigobaixa");

                    b.Property<DateTime?>("Datahoracadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoracadastro");

                    b.Property<DateTime?>("Datahoradesfinal")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoradesfinal");

                    b.Property<DateTime?>("Datahoraentrega")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoraentrega");

                    b.Property<DateTime?>("Datahorafinalizado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahorafinalizado");

                    b.Property<DateTime?>("Datahorancertificado")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahorancertificado");

                    b.Property<DateTime?>("Datahoratransportadora")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoratransportadora");

                    b.Property<int?>("Empresa")
                        .HasColumnType("integer")
                        .HasColumnName("empresa");

                    b.Property<string>("Nomecondutor")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nomecondutor");

                    b.Property<int?>("Numeromanifesto")
                        .HasColumnType("integer")
                        .HasColumnName("numeromanifesto");

                    b.Property<string>("Obsdestfinal")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("obsdestfinal");

                    b.Property<string>("Obsdestfinal2")
                        .HasColumnType("character varying")
                        .HasColumnName("obsdestfinal2");

                    b.Property<string>("Placaveiculo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("placaveiculo");

                    b.Property<double?>("Quantidade")
                        .HasColumnType("double precision")
                        .HasColumnName("quantidade");

                    b.Property<int?>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("responsavel");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.Property<int?>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao");

                    b.Property<int?>("Transportadora")
                        .HasColumnType("integer")
                        .HasColumnName("transportadora");

                    b.Property<double?>("Transportadorasiat")
                        .HasColumnType("double precision")
                        .HasColumnName("transportadorasiat");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade");

                    b.HasKey("Ctrid", "Rev")
                        .HasName("residuos_ctr_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_ctr", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosCtrresiduo", b =>
                {
                    b.Property<int>("Ctrresiduoid")
                        .HasColumnType("integer")
                        .HasColumnName("ctrresiduoid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<string>("Codigobaixa")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("codigobaixa");

                    b.Property<int?>("Ctr")
                        .HasColumnType("integer")
                        .HasColumnName("ctr");

                    b.Property<string>("Numeromanifesto")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("numeromanifesto");

                    b.Property<int?>("Qtde")
                        .HasColumnType("integer")
                        .HasColumnName("qtde");

                    b.Property<int?>("Qtdetrans")
                        .HasColumnType("integer")
                        .HasColumnName("qtdetrans");

                    b.Property<int?>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade");

                    b.Property<int?>("Unidadetrans")
                        .HasColumnType("integer")
                        .HasColumnName("unidadetrans");

                    b.HasKey("Ctrresiduoid", "Rev")
                        .HasName("residuos_ctrresiduo_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_ctrresiduo", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosEmpresa", b =>
                {
                    b.Property<int>("Empresaid")
                        .HasColumnType("integer")
                        .HasColumnName("empresaid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<DateTime?>("Datacadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadastro");

                    b.Property<DateOnly?>("Datalicenciamento")
                        .HasColumnType("date")
                        .HasColumnName("datalicenciamento");

                    b.Property<DateOnly?>("Datavenclicenciamento")
                        .HasColumnType("date")
                        .HasColumnName("datavenclicenciamento");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<string>("Inscricaoeconomica")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("inscricaoeconomica");

                    b.Property<string>("Inscricaomunicipal")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaomunicipal");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<int?>("Numerolicenciamento")
                        .HasColumnType("integer")
                        .HasColumnName("numerolicenciamento");

                    b.Property<string>("Razaosocial")
                        .HasColumnType("character varying")
                        .HasColumnName("razaosocial");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.Property<string>("Senha")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.HasKey("Empresaid", "Rev")
                        .HasName("residuos_empresa_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_empresa", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosEstadofisico", b =>
                {
                    b.Property<int>("Estadofisicoid")
                        .HasColumnType("integer")
                        .HasColumnName("estadofisicoid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.HasKey("Estadofisicoid", "Rev")
                        .HasName("residuos_estadofisico_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_estadofisico", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosResiduo", b =>
                {
                    b.Property<int>("Residuoid")
                        .HasColumnType("integer")
                        .HasColumnName("residuoid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<int?>("Armazenamento")
                        .HasColumnType("integer")
                        .HasColumnName("armazenamento");

                    b.Property<int?>("Autotransporte")
                        .HasColumnType("integer")
                        .HasColumnName("autotransporte");

                    b.Property<int?>("Caracteristica")
                        .HasColumnType("integer")
                        .HasColumnName("caracteristica");

                    b.Property<int?>("Classificacao")
                        .HasColumnType("integer")
                        .HasColumnName("classificacao");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codigo");

                    b.Property<int?>("Estadofisico")
                        .HasColumnType("integer")
                        .HasColumnName("estadofisico");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<int?>("Numeroonu")
                        .HasColumnType("integer")
                        .HasColumnName("numeroonu");

                    b.Property<int?>("Numerorisco")
                        .HasColumnType("integer")
                        .HasColumnName("numerorisco");

                    b.Property<string>("Obs")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("obs");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.HasKey("Residuoid", "Rev")
                        .HasName("residuos_residuo_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_residuo", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosTransportadora", b =>
                {
                    b.Property<int>("Transportadoraid")
                        .HasColumnType("integer")
                        .HasColumnName("transportadoraid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<int?>("Ativo")
                        .HasColumnType("integer")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cep");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("complemento");

                    b.Property<DateTime?>("Datacadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadastro");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<string>("Inscricaomunicipal")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("inscricaomunicipal");

                    b.Property<string>("Licencaambiental")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("licencaambiental");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("numero");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("responsavel");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.Property<string>("Rua")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("rua");

                    b.Property<string>("Senha")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("telefone");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.Property<DateOnly?>("Validadelicenca")
                        .HasColumnType("date")
                        .HasColumnName("validadelicenca");

                    b.HasKey("Transportadoraid", "Rev")
                        .HasName("residuos_transportadora_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_transportadora", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosUnidade", b =>
                {
                    b.Property<int>("Unidadeid")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeid");

                    b.Property<int>("Rev")
                        .HasColumnType("integer")
                        .HasColumnName("rev");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<short?>("Revtype")
                        .HasColumnType("smallint")
                        .HasColumnName("revtype");

                    b.HasKey("Unidadeid", "Rev")
                        .HasName("residuos_unidade_pkey");

                    b.HasIndex("Rev");

                    b.ToTable("residuos_unidade", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Revinfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<DateTime>("Datahoraalteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datahoraalteracao");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("timestamp");

                    b.Property<int>("Usuarioid")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.Property<string>("Usuarionome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("usuarionome");

                    b.HasKey("Id")
                        .HasName("revinfo_pkey");

                    b.ToTable("revinfo", "auditoria");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Rua", b =>
                {
                    b.Property<int>("Ruaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ruaid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ruaid"));

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("ativo");

                    b.Property<int?>("Bairrofinal")
                        .HasColumnType("integer")
                        .HasColumnName("bairrofinal");

                    b.Property<int?>("Bairroinicial")
                        .HasColumnType("integer")
                        .HasColumnName("bairroinicial");

                    b.Property<string>("Cep")
                        .HasColumnType("character varying")
                        .HasColumnName("cep");

                    b.Property<int?>("Cidade")
                        .HasColumnType("integer")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasColumnType("character varying")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("estado");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("\r\ngeraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[70]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Nomepopular")
                        .HasColumnType("character varying")
                        .HasColumnName("nomepopular");

                    b.Property<string>("Tipo")
                        .HasColumnType("character varying")
                        .HasColumnName("tipo");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("\r\ngeraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("\r\ngeraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("\r\ngeraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Ruaid")
                        .HasName("rua_pkey");

                    b.HasIndex("Bairrofinal");

                    b.HasIndex("Bairroinicial");

                    b.HasIndex(new[] { "Cep" }, "rua_cep_idx");

                    b.HasIndex(new[] { "Estado" }, "rua_estado_idx");

                    b.HasIndex(new[] { "Nome" }, "rua_nome_idx");

                    b.ToTable("rua", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\n\r\n\r\nformtitle[Cadastro de Rua]\r\n\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\n\r\n\r\ngridtitle[Lista de Ruas]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Sistema", b =>
                {
                    b.Property<int>("Sistemaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sistemaid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Sistemaid"));

                    b.Property<int?>("Emproducao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("emproducao")
                        .HasComment("forminputlabel[Em produção] \r\nforminputsize[50]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Em produção] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Manutencao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("manutencao")
                        .HasComment("forminputlabel[Em manutenção] \r\nforminputsize[50]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[50] \r\n \r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<DateTime?>("Restarttime")
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("restarttime");

                    b.Property<int>("Tema")
                        .HasColumnType("integer")
                        .HasColumnName("tema")
                        .HasComment("forminputlabel[Tema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[false]\r\n\r\ncolumngridid[tema.nome]\r\ncolumngridtitle[Tema]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Urlfooter")
                        .HasColumnType("integer")
                        .HasColumnName("urlfooter")
                        .HasComment("forminputlabel[URL footer] \r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Urlheader")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("urlheader")
                        .HasComment("forminputlabel[URL header] \r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Urllogo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("urllogo")
                        .HasComment("forminputlabel[URL logo] \r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Urlmenuprincipal")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("urlmenuprincipal")
                        .HasComment("forminputlabel[URL Menu principal] \r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Urlproducao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("urlproducao")
                        .HasComment("forminputlabel[URL de produção] \r\nforminputsize[50]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[URL de produção] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Urlteste")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("urlteste")
                        .HasComment("forminputlabel[URL de teste] \r\nforminputsize[50]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[URL de teste] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Usuariosonline")
                        .HasColumnType("integer")
                        .HasColumnName("usuariosonline")
                        .HasComment("forminputlabel[Usuários online] \r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("versao")
                        .HasComment("forminputlabel[Versão] \r\nforminputsize[50] \r\n \r\ncolumngridid[] \r\ncolumngridtitle[Versão] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Sistemaid")
                        .HasName("sistema_pk");

                    b.HasIndex("Tema");

                    b.ToTable("sistema", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Sistema]\r\n\r\nfieldsgrid[sistemaid,nome,urlteste,urlproducao,emproducao,manutencao,versao:sistemaid]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\nfieldsform[sistemaid,nome,urlteste,urlproducao,emproducao,manutencao,tema.temaid,tema.nome,urlfooter,urlheader,urllogo,urlmenuprincipal,usuariosonline,versao] \r\n \r\ngridtitle[Lista de Sistemas]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Sistemacontexto", b =>
                {
                    b.Property<int>("Sistemacontextoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sistemacontextoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Sistemacontextoid"));

                    b.Property<string>("Contexto")
                        .HasColumnType("character varying")
                        .HasColumnName("contexto");

                    b.Property<bool>("Emproducao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("emproducao");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("version");

                    b.HasKey("Sistemacontextoid")
                        .HasName("sistemacontexto_pkey");

                    b.HasIndex("Sistema");

                    b.ToTable("sistemacontexto", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Situacao", b =>
                {
                    b.Property<int>("Situacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("situacaoid")
                        .HasDefaultValueSql("nextval(('\"agenda\".\"situacao_situacaoid_seq\"'::text)::regclass)")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Descricao")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("descricao")
                        .HasComment("forminputlabel[Descricao] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Descricao] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Situacaoid")
                        .HasName("situacao_pkey");

                    b.ToTable("situacao", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Situacao]\r\n\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\n\r\ngridtitle[Lista de Situacao]\r\n");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Situacao1", b =>
                {
                    b.Property<int>("Situacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("situacaoid")
                        .HasComment("Código da situação");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Situacaoid"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("descricao")
                        .HasComment("Descrição da situação");

                    b.HasKey("Situacaoid")
                        .HasName("situacao_pkey");

                    b.ToTable("situacao", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Status", b =>
                {
                    b.Property<int>("Statusid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("statusid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Statusid"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(99)
                        .HasColumnType("character varying(99)")
                        .HasColumnName("descricao")
                        .HasComment("forminputlabel[Descricao]\r\nforminputsize[15]\r\nforminputclass[required]\r\n\r\n");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Statusid")
                        .HasName("status_pkey");

                    b.ToTable("status", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Status]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Status]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Status1", b =>
                {
                    b.Property<int>("Statusid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("statusid")
                        .HasComment("Código do status");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Statusid"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("descricao")
                        .HasComment("Descrição do status");

                    b.HasKey("Statusid")
                        .HasName("status_pkey");

                    b.ToTable("status", "cartografia", t =>
                        {
                            t.HasComment("Status do projeto");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Status2", b =>
                {
                    b.Property<int>("Statusid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("statusid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Statusid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int?>("Orderna")
                        .HasColumnType("integer")
                        .HasColumnName("orderna");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Statusid")
                        .HasName("status_pkey");

                    b.ToTable("status", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Status]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Status]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tema", b =>
                {
                    b.Property<int>("Temaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("temaid")
                        .HasComment("forminputlabel[Código] forminputsize[7]  columngridid[] columngridtitle[Código] columngridtype[ro] columngridsize[80] columngridalign[left] columngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Temaid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] forminputsize[50]  columngridid[] columngridtitle[Nome] columngridtype[ro] columngridsize[*] columngridalign[left] columngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("url")
                        .HasComment("forminputlabel[URL] forminputsize[50]  columngridid[] columngridtitle[URL] columngridtype[ro] columngridsize[*] columngridalign[left] columngridcolor[white]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Temaid")
                        .HasName("tema_pk");

                    b.ToTable("tema", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Tema]   \r\nfieldsgrid[temaid,nome,url:temaid] \r\nfieldsform[temaid,nome,url] \r\n\r\ngridtitle[Lista de Temas]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Teste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Teste", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipoarquivo", b =>
                {
                    b.Property<int>("Tipoarquivoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tipoarquivoid")
                        .HasComment("Código do tipo de arquivo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tipoarquivoid"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao")
                        .HasComment("Descricao do tipo");

                    b.Property<string>("Extensao")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("extensao")
                        .HasComment("Extensão do arquivo");

                    b.HasKey("Tipoarquivoid")
                        .HasName("tipoarquivo_pkey");

                    b.ToTable("tipoarquivo", "cartografia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipoarquivo1", b =>
                {
                    b.Property<int>("Tipoarquivoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tipoarquivoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tipoarquivoid"));

                    b.Property<int?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("ativo");

                    b.Property<string>("Contenttype")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("contenttype");

                    b.Property<string>("Extension")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("extension");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Tipoarquivoid")
                        .HasName("tipoarquivo_pkey");

                    b.ToTable("tipoarquivo", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipocontrole", b =>
                {
                    b.Property<int>("Tipocontroleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tipocontroleid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tipocontroleid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Tipocontroleid")
                        .HasName("tipocontrole_pkey");

                    b.ToTable("tipocontrole", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Tipo de Controle]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Tipos de Controle]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipologradouro", b =>
                {
                    b.Property<int>("Tipologradouroid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tipologradouroid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tipologradouroid"));

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.HasKey("Tipologradouroid")
                        .HasName("tipologradouro_pkey");

                    b.ToTable("tipologradouro", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipomandato", b =>
                {
                    b.Property<int>("Tipomandatoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tipomandatoid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tipomandatoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[70]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Tipomandatoid")
                        .HasName("tipomandato_pkey");

                    b.ToTable("tipomandato", "sisobra", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Tipo-Mandato]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Tipos de Mandato]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipounidade", b =>
                {
                    b.Property<int>("Tipounidadeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tipounidadeid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tipounidadeid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[60]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Tipounidadeid")
                        .HasName("tipounidade_pkey");

                    b.ToTable("tipounidade", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Tipo de Unidade] \r\n\r\nfieldsgrid[tipounidadeid,nome:tipounidadeid]\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\nfieldsform[tipounidadeid,nome]\r\n\r\ngridtitle[Lista de Tipos de Unidades]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipoveiculodivulgacao", b =>
                {
                    b.Property<int>("Tipoveiculodivulgacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tipoveiculodivulgacaoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tipoveiculodivulgacaoid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Lei")
                        .HasColumnType("character varying")
                        .HasColumnName("lei")
                        .HasComment("forminputlabel[Lei]\r\nforminputsize[20]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Lei]\r\ncolumngridtype[ro]\r\ncolumngridsize[130]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Tipoveiculodivulgacaoid")
                        .HasName("tipoveiculodivulgacao_pkey");

                    b.ToTable("tipoveiculodivulgacao", "divulgacao", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Tipo Veículo de Divulgação]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Tipos de Veículos de Divulgação]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tmpbairroregiao", b =>
                {
                    b.Property<int>("Tmpbairroregiaoid")
                        .HasColumnType("integer")
                        .HasColumnName("tmpbairroregiaoid");

                    b.Property<string>("Bairro")
                        .HasColumnType("character varying")
                        .HasColumnName("bairro");

                    b.Property<int?>("Bairroid")
                        .HasColumnType("integer")
                        .HasColumnName("bairroid");

                    b.Property<string>("Parcelamento")
                        .HasColumnType("character varying")
                        .HasColumnName("parcelamento");

                    b.Property<string>("Regiao")
                        .HasColumnType("character varying")
                        .HasColumnName("regiao");

                    b.Property<int?>("Regiaoid")
                        .HasColumnType("integer")
                        .HasColumnName("regiaoid");

                    b.HasKey("Tmpbairroregiaoid")
                        .HasName("tmpbairroregiao_pkey");

                    b.ToTable("tmpbairroregiao", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tmpproc", b =>
                {
                    b.Property<int>("Tmpprocid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tmpprocid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tmpprocid"));

                    b.Property<string>("Inscricao")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricao");

                    b.Property<string>("Processo")
                        .HasColumnType("character varying")
                        .HasColumnName("processo");

                    b.HasKey("Tmpprocid")
                        .HasName("tmpproc_pkey");

                    b.ToTable("tmpproc", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Transportador", b =>
                {
                    b.Property<int>("Transportadorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transportadorid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Transportadorid"));

                    b.Property<int>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("ativo");

                    b.Property<string>("Cadmunicipal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cadmunicipal")
                        .HasComment("forminputlabel[Cadastro Municipal]\r\nforminputsize[20]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Cep")
                        .HasColumnType("character varying")
                        .HasColumnName("cep");

                    b.Property<DateOnly?>("Datacadastro")
                        .HasColumnType("date")
                        .HasColumnName("datacadastro");

                    b.Property<DateOnly?>("Datavalidade")
                        .HasColumnType("date")
                        .HasColumnName("datavalidade");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("endereco")
                        .HasComment("forminputlabel[Endereço]\r\nforminputsize[30]\r\nforminputclass[uppercase]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Rua")
                        .HasColumnType("character varying")
                        .HasColumnName("rua");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefone")
                        .HasComment("forminputlabel[Telefone]\r\nforminputsize[12]\r\nforminputclass[phone]\r\n\r\ngeragridmain[false]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Transportadorid")
                        .HasName("transportador_pkey");

                    b.ToTable("transportador", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Transportador]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Transportadores]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Transportadora", b =>
                {
                    b.Property<int>("Transportadoraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transportadoraid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Transportadoraid"));

                    b.Property<int?>("Ativo")
                        .HasColumnType("integer")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("cnpj")
                        .HasComment("forminputlabel[CNPJ]\r\nforminputsize[10]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[CNPJ]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Complemento")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("complemento");

                    b.Property<DateTime?>("Datacadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datacadastro");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Inscricaomunicipal")
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaomunicipal");

                    b.Property<string>("Licencaambiental")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("licencaambiental");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numero");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("responsavel")
                        .HasComment("forminputlabel[Responsável]\r\nforminputsize[20]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Responsável]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Rua")
                        .HasColumnType("character varying")
                        .HasColumnName("rua");

                    b.Property<string>("Senha")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("telefone")
                        .HasComment("forminputlabel[Telefone]\r\nforminputsize[12]\r\nforminputclass[phone]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Telefone]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<DateOnly?>("Validadelicenca")
                        .HasColumnType("date")
                        .HasColumnName("validadelicenca");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Transportadoraid")
                        .HasName("transportadora_pkey");

                    b.HasIndex(new[] { "Inscricaomunicipal" }, "transportadora_idx");

                    b.ToTable("transportadora", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Transportadora]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Transportadoras]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Transportadoraresiduo", b =>
                {
                    b.Property<int>("Transportadoraresiduoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transportadoraresiduoid")
                        .HasDefaultValueSql("nextval('residuos.transportadoraresiduo_transportadoraresiduoid_seq1'::regclass)");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Licencaambiental")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("licencaambiental");

                    b.Property<int?>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo");

                    b.Property<int?>("Transportadora")
                        .HasColumnType("integer")
                        .HasColumnName("transportadora");

                    b.Property<int?>("Unidadeaud")
                        .HasColumnType("integer")
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<DateOnly?>("Validadelicenca")
                        .HasColumnType("date")
                        .HasColumnName("validadelicenca");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Transportadoraresiduoid")
                        .HasName("transportadoraresiduo_pkey");

                    b.HasIndex("Residuo");

                    b.HasIndex("Transportadora");

                    b.ToTable("transportadoraresiduo", "residuos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Unidade", b =>
                {
                    b.Property<int>("Unidadeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("unidadeid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Unidadeid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[60]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Tipounidade")
                        .HasColumnType("integer")
                        .HasColumnName("tipounidade")
                        .HasComment("forminputlabel[Tipo Unidade]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[false]\r\n");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Unidadeid")
                        .HasName("unidade_pkey");

                    b.HasIndex("Tipounidade");

                    b.ToTable("unidade", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Unidade] \r\n\r\nfieldsgrid[unidadeid,nome:unidadeid]\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\nfieldsform[unidadeid,nome]\r\n\r\ngridtitle[Lista de Unidades]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Unidade1", b =>
                {
                    b.Property<int>("Unidadeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("unidadeid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Unidadeid"));

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome]\r\nforminputsize[50]\r\nforminputclass[uppercase]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Nome]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeraformdet[false]\r\ngeragridmain[false]");

                    b.HasKey("Unidadeid")
                        .HasName("unidade_pkey");

                    b.ToTable("unidade", "residuos", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs]\r\n\r\nformtitle[Cadastro de Unidade]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Unidades]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Unidadeusuario", b =>
                {
                    b.Property<int>("Unidadeusuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("unidadeusuarioid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Unidadeusuarioid"));

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Grupousuario")
                        .HasColumnType("integer")
                        .HasColumnName("grupousuario")
                        .HasComment("forminputlabel[Grupo Usuario]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[false]\r\n");

                    b.Property<int?>("Unidade")
                        .HasColumnType("integer")
                        .HasColumnName("unidade")
                        .HasComment("forminputlabel[Unidade]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[false]\r\n");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario")
                        .HasComment("forminputlabel[Usuario]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[false]\r\n");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Unidadeusuarioid")
                        .HasName("unidadeusuario_pkey");

                    b.HasIndex("Grupousuario");

                    b.HasIndex("Unidade");

                    b.HasIndex("Usuario");

                    b.ToTable("unidadeusuario", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Usuario x Unidade] \r\n\r\nfieldsgrid[usuariounidadeid,unidade.nome,usuario.nome:usuariounidadeid]\r\nfiltersgrid[#text_filter,#text_filter] \r\n\r\nfieldsform[usuariounidadeid,unidade.nome,usuario.nome]\r\n\r\ngridtitle[Lista de Usuario x Unidade]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Usuario", b =>
                {
                    b.Property<int>("Usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid")
                        .HasComment("forminputlabel[Código] \r\nforminputsize[7]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Código] \r\ncolumngridtype[ro] \r\ncolumngridsize[80] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Usuarioid"));

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("login")
                        .HasComment("forminputlabel[Login]\r\nforminputsize[20]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome")
                        .HasComment("forminputlabel[Nome] \r\nforminputsize[50]  \r\n\r\ncolumngridid[] \r\ncolumngridtitle[Nome] \r\ncolumngridtype[ro] \r\ncolumngridsize[*] \r\ncolumngridalign[left] \r\ncolumngridcolor[white]");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("senha")
                        .HasComment("forminputlabel[Senha]\r\nforminputsize[20]");

                    b.Property<int?>("Tipocredid")
                        .HasColumnType("integer")
                        .HasColumnName("tipocredid");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Usuarioid")
                        .HasName("usuario_pk");

                    b.ToTable("usuario", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Usuários]   \r\nfieldsgrid[usuarioid,nome,login,senha:usuarioid] \r\nfieldsform[usuarioid,nome,login,senha] \r\n\r\ngridtitle[Lista de Usuários]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Usuariocargo", b =>
                {
                    b.Property<int>("Usuariocargoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usuariocargoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Usuariocargoid"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("cargo");

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Usuariocargoid")
                        .HasName("usuariocargo_pkey");

                    b.HasIndex("Usuario");

                    b.ToTable("usuariocargo", "divulgacao");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.UsuariosAdmin", b =>
                {
                    b.Property<string>("IdGrupo")
                        .HasColumnType("text")
                        .HasColumnName("(# ID) Grupo");

                    b.Property<string>("IdNome")
                        .HasColumnType("text")
                        .HasColumnName("(# ID) Nome");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NomeDoGrupo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nome do Grupo");

                    b.Property<string>("NomeDoUsuário")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("Nome do Usuário");

                    b.ToTable((string)null);

                    b.ToView("usuarios_admin", (string)null);
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Usuariosistema", b =>
                {
                    b.Property<int>("Usuariosistemaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usuariosistemaid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Usuariosistemaid"));

                    b.Property<DateTime?>("Dataexpiracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dataexpiracao")
                        .HasComment("forminputlabel[Expiração de acesso] \r\nforminputsize[50]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Grupoaud")
                        .HasColumnType("integer")
                        .HasColumnName("grupoaud");

                    b.Property<int>("Sistema")
                        .HasColumnType("integer")
                        .HasColumnName("sistema")
                        .HasComment("forminputlabel[Sistema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[true]\r\n\r\ncolumngridid[sistema.nome]\r\ncolumngridtitle[Sistema]\r\ncolumngridtype[ro]\r\ncolumngridsize[180]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Tema")
                        .HasColumnType("integer")
                        .HasColumnName("tema")
                        .HasComment("forminputlabel[Tema]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nome]\r\n\r\ngeragridmain[true]\r\n\r\ncolumngridid[tema.nome]\r\ncolumngridtitle[Tema]\r\ncolumngridtype[ro]\r\ncolumngridsize[180]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int>("Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("usuario")
                        .HasComment("forminputlabel[Usuário]\r\nforminputsize[50]\r\n\r\nsearchmode[popup]\r\npopupresultfield[nome]\r\npopupfieldsgrid[usuarioid,nome,login,senha:usuarioid]\r\n\r\ngeragridmain[true]\r\n\r\ncolumngridid[usuario.nome]\r\ncolumngridtitle[Usuário]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<int?>("Usuarioaud")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Usuariosistemaid")
                        .HasName("usuariosistema_pk");

                    b.HasIndex("Sistema");

                    b.HasIndex("Tema");

                    b.HasIndex("Usuario");

                    b.ToTable("usuariosistema", null, t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]  \r\n\r\nformtitle[Cadastro de Usuários / Sistema]   \r\n\r\nfieldsgrid[usuariosistemaid,sistema.nome,usuario.nome,tema.nome,qtdeacessos:usuariosistemaid] \r\nfieldsform[usuariosistemaid,sistema.sistemaid,sistema.nome,usuario.usuarioid,usuario.nome,tema.temaid,tema.nome,qtdeacessos,ultimoacesso,dataexpiracao]\r\n\r\ngridtitle[Lista de Usuários / Sistema]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Valorcoluna", b =>
                {
                    b.Property<int>("Valorcolunaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("valorcolunaid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Valorcolunaid"));

                    b.Property<string>("Aplicacao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("aplicacao");

                    b.Property<decimal?>("Construcao")
                        .HasColumnType("numeric")
                        .HasColumnName("construcao");

                    b.Property<int>("Controleresiduo")
                        .HasColumnType("integer")
                        .HasColumnName("controleresiduo")
                        .HasComment("forminputlabel[Controle-Resíduo]\r\nforminputsize[12]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<decimal?>("Demolicao")
                        .HasColumnType("numeric")
                        .HasColumnName("demolicao");

                    b.Property<int?>("Destinofinal")
                        .HasColumnType("integer")
                        .HasColumnName("destinofinal");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<string>("Processo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("processo");

                    b.Property<decimal?>("Quantidade")
                        .HasColumnType("numeric")
                        .HasColumnName("quantidade");

                    b.Property<int>("Residuo")
                        .HasColumnType("integer")
                        .HasColumnName("residuo")
                        .HasComment("forminputlabel[Coluna]\r\nforminputsize[180]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[nomecoluna.nome]\r\n\r\ncolumngridid[nomecoluna.nome]\r\ncolumngridtitle[Coluna]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Reutilizacao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("reutilizacao");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric")
                        .HasColumnName("total");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Valorcolunaid")
                        .HasName("valorcoluna_pkey");

                    b.HasIndex("Controleresiduo");

                    b.HasIndex("Destinofinal");

                    b.HasIndex("Residuo");

                    b.ToTable("valorcoluna", "agenda", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Valor de Coluna]\r\nfiltersgrid[#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Valores de Coluna]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Veiculodivulgacao", b =>
                {
                    b.Property<int>("Veiculodivulgacaoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("veiculodivulgacaoid")
                        .HasComment("forminputlabel[Código]\r\nforminputsize[7]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Código]\r\ncolumngridtype[ro]\r\ncolumngridsize[80]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Veiculodivulgacaoid"));

                    b.Property<int?>("Cep")
                        .HasColumnType("integer")
                        .HasColumnName("cep")
                        .HasComment("forminputlabel[CEP]\r\nforminputsize[10]\r\nforminputclass[number]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Condesp")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("condesp");

                    b.Property<DateOnly>("Datacadastro")
                        .HasColumnType("date")
                        .HasColumnName("datacadastro")
                        .HasComment("forminputlabel[Data-Cadastro]\r\nforminputsize[12]\r\nforminputclass[data]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Data-Cadastro]\r\ncolumngridtype[ro]\r\ncolumngridsize[110]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<DateOnly>("Dataprazo")
                        .HasColumnType("date")
                        .HasColumnName("dataprazo")
                        .HasComment("forminputlabel[Data-Prazo]\r\nforminputsize[12]\r\nforminputclass[data]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Data-Prazo]\r\ncolumngridtype[ro]\r\ncolumngridsize[110]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<DateOnly?>("Datpro")
                        .HasColumnType("date")
                        .HasColumnName("datpro")
                        .HasComment("Data de abertura do processo no protocolo");

                    b.Property<decimal?>("Dimensaox")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("dimensaox");

                    b.Property<decimal?>("Dimensaoy")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("dimensaoy");

                    b.Property<int>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int?>("Idarquivodivulgacao")
                        .HasColumnType("integer")
                        .HasColumnName("idarquivodivulgacao")
                        .HasComment("ID do arquivo localizado no banco 10.0.0.148 - SADWEB.arqanx");

                    b.Property<string>("Inscricaoeconomica")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaoeconomica")
                        .HasComment("forminputlabel[Insc. Econômica]\r\nforminputsize[15]\r\nforminputclass[required]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Insc. Econômica]\r\ncolumngridtype[ro]\r\ncolumngridsize[120]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Inscricaoimobiliaria")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("inscricaoimobiliaria")
                        .HasComment("forminputlabel[Insc. Imobiliária]\r\nforminputsize[15]\r\nforminputclass[required]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[Insc. Imobiliária]\r\ncolumngridtype[ro]\r\ncolumngridsize[120]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Latitude")
                        .HasColumnType("character varying")
                        .HasColumnName("latitude")
                        .HasComment("forminputlabel[Latitude]\r\nforminputsize[12]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<string>("Longitude")
                        .HasColumnType("character varying")
                        .HasColumnName("longitude")
                        .HasComment("forminputlabel[Longitude]\r\nforminputsize[12]\r\nforminputclass[ro]\r\n\r\ngeragridmain[false]");

                    b.Property<int?>("Nronai")
                        .HasColumnType("integer")
                        .HasColumnName("nronai")
                        .HasComment("Numero da NAIN");

                    b.Property<string>("Numeroautorizacao")
                        .HasColumnType("character varying")
                        .HasColumnName("numeroautorizacao")
                        .HasComment("forminputlabel[N&ordm; Autorização]\r\nforminputsize[15]\r\nforminputclass[required]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[N&ordm; Autorização]\r\ncolumngridtype[ro]\r\ncolumngridsize[120]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Numeroprocesso")
                        .HasColumnType("character varying")
                        .HasColumnName("numeroprocesso")
                        .HasComment("forminputlabel[N&ordm; Processo]\r\nforminputsize[15]\r\nforminputclass[required]\r\n\r\ncolumngridid[]\r\ncolumngridtitle[N&ordm; Processo]\r\ncolumngridtype[ro]\r\ncolumngridsize[120]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<string>("Obsdiv")
                        .HasColumnType("text")
                        .HasColumnName("obsdiv")
                        .HasComment("Observação");

                    b.Property<int?>("Ocorrencia")
                        .HasColumnType("integer")
                        .HasColumnName("ocorrencia");

                    b.Property<int?>("Regular")
                        .HasColumnType("integer")
                        .HasColumnName("regular")
                        .HasComment("1 - SIM\n2 - NÃO");

                    b.Property<int>("Tipoveiculodivulgacao")
                        .HasColumnType("integer")
                        .HasColumnName("tipoveiculodivulgacao")
                        .HasComment("forminputlabel[Tipo Veículo Divulgação]\r\nforminputsize[250]\r\n\r\nsearchmode[combobox]\r\ncomboboxresultfield[tipoveiculodivulgacao.nome]\r\n\r\ncolumngridid[tipoveiculodivulgacao.nome]\r\ncolumngridtitle[Tipo Veículo Divulgação]\r\ncolumngridtype[ro]\r\ncolumngridsize[*]\r\ncolumngridalign[left]\r\ncolumngridcolor[white]");

                    b.Property<char?>("Tippro")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("tippro")
                        .HasComment("Tipo de Processo");

                    b.Property<int>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version")
                        .HasComment("geraentity[false]\r\ngeraform[false]\r\ngeragridmain[false]");

                    b.HasKey("Veiculodivulgacaoid")
                        .HasName("veiculodivulgacao_pkey");

                    b.HasIndex("Ocorrencia");

                    b.HasIndex("Tipoveiculodivulgacao");

                    b.ToTable("veiculodivulgacao", "divulgacao", t =>
                        {
                            t.HasComment("template.build[geradaoimpl,geradaointer,geraentity,geralogica,geragridmain,geraform,gerajs,core]\r\n\r\nformtitle[Cadastro de Veículo de Divulgação]\r\nfiltersgrid[#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter]\r\n\r\ngridtitle[Lista de Veículos de Divulgação]");
                        });
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Zoneamento", b =>
                {
                    b.Property<int>("Zoneamentoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("zoneamentoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Zoneamentoid"));

                    b.Property<int?>("Grupoaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("grupoaud");

                    b.Property<string>("Nome")
                        .HasColumnType("character varying")
                        .HasColumnName("nome");

                    b.Property<decimal?>("Taxa")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("taxa")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("Unidadeaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("unidadeaud");

                    b.Property<int?>("Usuarioaud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("usuarioaud");

                    b.Property<int?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("version");

                    b.HasKey("Zoneamentoid")
                        .HasName("zoneamento_pkey");

                    b.ToTable("zoneamento", "agenda");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Analiseprojeto", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Analistum", "AnalistaNavigation")
                        .WithMany("Analiseprojetos")
                        .HasForeignKey("Analista")
                        .HasConstraintName("analiseprojeto_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Codificacao", "CodificacaoNavigation")
                        .WithMany("Analiseprojetos")
                        .HasForeignKey("Codificacao")
                        .HasConstraintName("analiseprojeto_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Projeto", "ProjetoNavigation")
                        .WithMany("Analiseprojetos")
                        .HasForeignKey("Projeto")
                        .HasConstraintName("analiseprojeto_fk");

                    b.Navigation("AnalistaNavigation");

                    b.Navigation("CodificacaoNavigation");

                    b.Navigation("ProjetoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Areareceptora1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Empresa2", "EmpresaNavigation")
                        .WithMany("Areareceptora1s")
                        .HasForeignKey("Empresa")
                        .HasConstraintName("areareceptora_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Transportadora", "TransportadoraNavigation")
                        .WithMany("Areareceptora1s")
                        .HasForeignKey("Transportadora")
                        .HasConstraintName("areareceptora_fk1");

                    b.Navigation("EmpresaNavigation");

                    b.Navigation("TransportadoraNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Modulosistema", "ModulosistemaNavigation")
                        .WithMany("Arquivos")
                        .HasForeignKey("Modulosistema")
                        .IsRequired()
                        .HasConstraintName("arquivo_fk");

                    b.Navigation("ModulosistemaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tipoarquivo", "TipoarquivoNavigation")
                        .WithMany("Arquivo1s")
                        .HasForeignKey("Tipoarquivo")
                        .IsRequired()
                        .HasConstraintName("arquivo_fk");

                    b.Navigation("TipoarquivoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo2", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tipoarquivo1", "TipoarquivoNavigation")
                        .WithMany("Arquivo2s")
                        .HasForeignKey("Tipoarquivo")
                        .IsRequired()
                        .HasConstraintName("arquivo_fk");

                    b.Navigation("TipoarquivoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivousuario", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Arquivo", "ArquivoNavigation")
                        .WithMany("Arquivousuarios")
                        .HasForeignKey("Arquivo")
                        .IsRequired()
                        .HasConstraintName("arquivo_arquivousuario_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Arquivousuarios")
                        .HasForeignKey("Usuario")
                        .IsRequired()
                        .HasConstraintName("usuario_arquivousuario_fk");

                    b.Navigation("ArquivoNavigation");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Bairro", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Regiaourbana1", "RegiaourbanaNavigation")
                        .WithMany("Bairros")
                        .HasForeignKey("Regiaourbana")
                        .HasConstraintName("bairro_fk1");

                    b.Navigation("RegiaourbanaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Bairro1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Regiaourbana", "RegiaourbanaNavigation")
                        .WithMany("Bairro1s")
                        .HasForeignKey("Regiaourbana")
                        .IsRequired()
                        .HasConstraintName("bairro_fk");

                    b.Navigation("RegiaourbanaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Certidao", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tipoveiculodivulgacao", "TipoveiculodivulgacaoNavigation")
                        .WithMany("Certidaos")
                        .HasForeignKey("Tipoveiculodivulgacao")
                        .IsRequired()
                        .HasConstraintName("certidao_fk");

                    b.Navigation("TipoveiculodivulgacaoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Certidaoconformidade", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tipoveiculodivulgacao", "TipoveiculodivulgacaoNavigation")
                        .WithMany("Certidaoconformidades")
                        .HasForeignKey("Tipoveiculodivulgacao")
                        .IsRequired()
                        .HasConstraintName("certidaoconformidade_fk");

                    b.Navigation("TipoveiculodivulgacaoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Controleresiduo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Caracteristicaemp", "CaracteristicaempNavigation")
                        .WithMany("Controleresiduos")
                        .HasForeignKey("Caracteristicaemp")
                        .IsRequired()
                        .HasConstraintName("controleresiduo_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Prfage", "ControleresiduoNavigation")
                        .WithOne("Controleresiduo")
                        .HasForeignKey("AprovacaoDigital.Infrastructure.Controleresiduo", "Controleresiduoid")
                        .IsRequired()
                        .HasConstraintName("controleresiduo_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Status", "StatusNavigation")
                        .WithMany("Controleresiduos")
                        .HasForeignKey("Status")
                        .HasConstraintName("controleresiduo_fk");

                    b.Navigation("CaracteristicaempNavigation");

                    b.Navigation("ControleresiduoNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ctr", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Areareceptora", "AreareceptoraNavigation")
                        .WithMany("Ctrs")
                        .HasForeignKey("Areareceptora")
                        .HasConstraintName("ctr_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Prfage", "PrfageNavigation")
                        .WithMany("Ctrs")
                        .HasForeignKey("Prfage")
                        .HasConstraintName("ctr_fk3");

                    b.HasOne("AprovacaoDigital.Infrastructure.Status", "StatusNavigation")
                        .WithMany("Ctrs")
                        .HasForeignKey("Status")
                        .HasConstraintName("ctr_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Transportador", "TransportadorNavigation")
                        .WithMany("Ctrs")
                        .HasForeignKey("Transportador")
                        .HasConstraintName("ctr_fk");

                    b.Navigation("AreareceptoraNavigation");

                    b.Navigation("PrfageNavigation");

                    b.Navigation("StatusNavigation");

                    b.Navigation("TransportadorNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ctr1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Areareceptora1", "AreareceptoraNavigation")
                        .WithMany("Ctr1AreareceptoraNavigations")
                        .HasForeignKey("Areareceptora")
                        .HasConstraintName("ctr_fk4");

                    b.HasOne("AprovacaoDigital.Infrastructure.Areareceptora1", "Areareceptora2Navigation")
                        .WithMany("Ctr1Areareceptora2Navigations")
                        .HasForeignKey("Areareceptora2")
                        .HasConstraintName("ctr_fk6");

                    b.HasOne("AprovacaoDigital.Infrastructure.Armazenamento", "ArmazenamentoNavigation")
                        .WithMany("Ctr1s")
                        .HasForeignKey("Armazenamento")
                        .HasConstraintName("ctr_fk3");

                    b.HasOne("AprovacaoDigital.Infrastructure.Empresa2", "EmpresaNavigation")
                        .WithMany("Ctr1s")
                        .HasForeignKey("Empresa")
                        .HasConstraintName("ctr_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Transportadora", "TransportadoraNavigation")
                        .WithMany("Ctr1s")
                        .HasForeignKey("Transportadora")
                        .HasConstraintName("ctr_fk5");

                    b.HasOne("AprovacaoDigital.Infrastructure.Unidade1", "UnidadeNavigation")
                        .WithMany("Ctr1s")
                        .HasForeignKey("Unidade")
                        .HasConstraintName("ctr_fk2");

                    b.Navigation("Areareceptora2Navigation");

                    b.Navigation("AreareceptoraNavigation");

                    b.Navigation("ArmazenamentoNavigation");

                    b.Navigation("EmpresaNavigation");

                    b.Navigation("TransportadoraNavigation");

                    b.Navigation("UnidadeNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ctrresiduo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Ctr1", "CtrNavigation")
                        .WithMany("Ctrresiduos")
                        .HasForeignKey("Ctr")
                        .IsRequired()
                        .HasConstraintName("ctrresiduo_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Unidade1", "UnidadeNavigation")
                        .WithMany("CtrresiduoUnidadeNavigations")
                        .HasForeignKey("Unidade")
                        .HasConstraintName("ctrresiduo_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Unidade1", "UnidadetransNavigation")
                        .WithMany("CtrresiduoUnidadetransNavigations")
                        .HasForeignKey("Unidadetrans")
                        .HasConstraintName("ctrresiduo_fk3");

                    b.Navigation("CtrNavigation");

                    b.Navigation("UnidadeNavigation");

                    b.Navigation("UnidadetransNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Documento", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Arquivo2", "ArquivoNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("Arquivo")
                        .IsRequired()
                        .HasConstraintName("documento_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Remessa", "RemessaNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("Remessa")
                        .IsRequired()
                        .HasConstraintName("documento_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Situacao", "SituacaoNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("Situacao")
                        .IsRequired()
                        .HasConstraintName("documento_fk1");

                    b.Navigation("ArquivoNavigation");

                    b.Navigation("RemessaNavigation");

                    b.Navigation("SituacaoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Documento1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Arquivo1", "ArquivoNavigation")
                        .WithMany("Documento1s")
                        .HasForeignKey("Arquivo")
                        .IsRequired()
                        .HasConstraintName("documento_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Remessa1", "RemessaNavigation")
                        .WithMany("Documento1s")
                        .HasForeignKey("Remessa")
                        .IsRequired()
                        .HasConstraintName("documento_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Situacao1", "SituacaoNavigation")
                        .WithMany("Documento1s")
                        .HasForeignKey("Situacao")
                        .IsRequired()
                        .HasConstraintName("documento_fk1");

                    b.Navigation("ArquivoNavigation");

                    b.Navigation("RemessaNavigation");

                    b.Navigation("SituacaoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Empresa", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Rua", "RuaNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("Rua")
                        .HasConstraintName("empresa_fk");

                    b.Navigation("RuaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Empresaresiduo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Armazenamento", "ArmazenamentoNavigation")
                        .WithMany("Empresaresiduos")
                        .HasForeignKey("Armazenamento")
                        .IsRequired()
                        .HasConstraintName("empresaresiduo_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Empresa2", "EmpresaNavigation")
                        .WithMany("Empresaresiduos")
                        .HasForeignKey("Empresa")
                        .IsRequired()
                        .HasConstraintName("empresaresiduo_fk");

                    b.Navigation("ArmazenamentoNavigation");

                    b.Navigation("EmpresaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Extrato", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tipoveiculodivulgacao", "TipoveiculodivulgacaoNavigation")
                        .WithMany("Extratos")
                        .HasForeignKey("Tipoveiculodivulgacao")
                        .IsRequired()
                        .HasConstraintName("extrato_fk");

                    b.Navigation("TipoveiculodivulgacaoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Grupousuario", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Grupo", "GrupoNavigation")
                        .WithMany("Grupousuarios")
                        .HasForeignKey("Grupo")
                        .IsRequired()
                        .HasConstraintName("grupo_grupousuario_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Sistema", "SistemaNavigation")
                        .WithMany("Grupousuarios")
                        .HasForeignKey("Sistema")
                        .HasConstraintName("grupousuario_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Grupousuarios")
                        .HasForeignKey("Usuario")
                        .IsRequired()
                        .HasConstraintName("usuario_grupousuario_fk");

                    b.Navigation("GrupoNavigation");

                    b.Navigation("SistemaNavigation");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Historico", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Projeto", "ProjetoNavigation")
                        .WithMany("Historicos")
                        .HasForeignKey("Projeto")
                        .IsRequired()
                        .HasConstraintName("historico_fk");

                    b.Navigation("ProjetoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Logacesso", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Sistema", "SistemaNavigation")
                        .WithMany("Logacessos")
                        .HasForeignKey("Sistema")
                        .IsRequired()
                        .HasConstraintName("sistema_logacesso_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Logacessos")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("usuario_logacesso_fk");

                    b.Navigation("SistemaNavigation");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Logsistema", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Sistema", "SistemaNavigation")
                        .WithMany("Logsistemas")
                        .HasForeignKey("Sistema")
                        .IsRequired()
                        .HasConstraintName("sistema_logsistema_fk");

                    b.Navigation("SistemaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulogrupo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Grupo", "GrupoNavigation")
                        .WithMany("Modulogrupos")
                        .HasForeignKey("Grupo")
                        .IsRequired()
                        .HasConstraintName("grupo_modulogrupo_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Modulosistema", "ModulosistemaNavigation")
                        .WithMany("Modulogrupos")
                        .HasForeignKey("Modulosistema")
                        .IsRequired()
                        .HasConstraintName("modulogrupo_fk");

                    b.Navigation("GrupoNavigation");

                    b.Navigation("ModulosistemaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulosistema", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Modulo", "ModuloNavigation")
                        .WithMany("Modulosistemas")
                        .HasForeignKey("Modulo")
                        .IsRequired()
                        .HasConstraintName("modulo_modulosistema_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Sistema", "SistemaNavigation")
                        .WithMany("Modulosistemas")
                        .HasForeignKey("Sistema")
                        .IsRequired()
                        .HasConstraintName("sistema_modulosistema_fk");

                    b.Navigation("ModuloNavigation");

                    b.Navigation("SistemaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulosistemausuario", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Modulosistema", "ModulosistemaNavigation")
                        .WithMany("Modulosistemausuarios")
                        .HasForeignKey("Modulosistema")
                        .IsRequired()
                        .HasConstraintName("modulosistemausuario_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Modulosistemausuarios")
                        .HasForeignKey("Usuario")
                        .IsRequired()
                        .HasConstraintName("modulosistemausuario_fk1");

                    b.Navigation("ModulosistemaNavigation");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Nomecoluna", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Residuo", "ResiduoNavigation")
                        .WithMany("Nomecolunas")
                        .HasForeignKey("Residuo")
                        .IsRequired()
                        .HasConstraintName("nomecoluna_fk");

                    b.Navigation("ResiduoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obra", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Bairro1", "BairroNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Bairro")
                        .IsRequired()
                        .HasConstraintName("obra_fk5");

                    b.HasOne("AprovacaoDigital.Infrastructure.Classificacao1", "ClassificacaoNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Classificacao")
                        .IsRequired()
                        .HasConstraintName("obra_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Contratado", "ContratadoNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Contratado")
                        .HasConstraintName("obra_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Evento", "EventoNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Evento")
                        .HasConstraintName("obra_fk8");

                    b.HasOne("AprovacaoDigital.Infrastructure.Faseobra", "FaseobraNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Faseobra")
                        .HasConstraintName("obra_fk4");

                    b.HasOne("AprovacaoDigital.Infrastructure.Fiscal", "FiscalNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Fiscal")
                        .HasConstraintName("obra_fk3");

                    b.HasOne("AprovacaoDigital.Infrastructure.Fonterecurso", "FonterecursoNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Fonterecurso")
                        .HasConstraintName("obra_fk9");

                    b.HasOne("AprovacaoDigital.Infrastructure.Ministerio", "MinisterioNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Ministerio")
                        .HasConstraintName("obra_fk7");

                    b.HasOne("AprovacaoDigital.Infrastructure.Recurso", "RecursoNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Recurso")
                        .HasConstraintName("obra_fk6");

                    b.HasOne("AprovacaoDigital.Infrastructure.Status2", "StatusNavigation")
                        .WithMany("Obras")
                        .HasForeignKey("Status")
                        .HasConstraintName("obra_fk1");

                    b.Navigation("BairroNavigation");

                    b.Navigation("ClassificacaoNavigation");

                    b.Navigation("ContratadoNavigation");

                    b.Navigation("EventoNavigation");

                    b.Navigation("FaseobraNavigation");

                    b.Navigation("FiscalNavigation");

                    b.Navigation("FonterecursoNavigation");

                    b.Navigation("MinisterioNavigation");

                    b.Navigation("RecursoNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obraandamento", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Obra", "ObraNavigation")
                        .WithMany("Obraandamentos")
                        .HasForeignKey("Obra")
                        .IsRequired()
                        .HasConstraintName("obraandamento_fk");

                    b.Navigation("ObraNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obradatum", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Obra", "ObraNavigation")
                        .WithMany("Obradata")
                        .HasForeignKey("Obra")
                        .IsRequired()
                        .HasConstraintName("obradata_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Status2", "StatusNavigation")
                        .WithMany("Obradata")
                        .HasForeignKey("Status")
                        .IsRequired()
                        .HasConstraintName("obradata_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Tipocontrole", "TipocontroleNavigation")
                        .WithMany("Obradata")
                        .HasForeignKey("Tipocontrole")
                        .HasConstraintName("obradata_fk2");

                    b.Navigation("ObraNavigation");

                    b.Navigation("StatusNavigation");

                    b.Navigation("TipocontroleNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obraevento", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Evento", "EventoNavigation")
                        .WithMany("Obraeventos")
                        .HasForeignKey("Evento")
                        .IsRequired()
                        .HasConstraintName("obraevento_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Obra", "ObraNavigation")
                        .WithMany("Obraeventos")
                        .HasForeignKey("Obra")
                        .IsRequired()
                        .HasConstraintName("obraevento_fk1");

                    b.Navigation("EventoNavigation");

                    b.Navigation("ObraNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obraparlamentar", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Obra", "ObraNavigation")
                        .WithMany("Obraparlamentars")
                        .HasForeignKey("Obra")
                        .IsRequired()
                        .HasConstraintName("obraparlamentar_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Parlamentar", "ParlamentarNavigation")
                        .WithMany("Obraparlamentars")
                        .HasForeignKey("Parlamentar")
                        .IsRequired()
                        .HasConstraintName("obraparlamentar_fk2");

                    b.Navigation("ObraNavigation");

                    b.Navigation("ParlamentarNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Parlamentar", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tipomandato", "TipomandatoNavigation")
                        .WithMany("Parlamentars")
                        .HasForeignKey("Tipomandato")
                        .HasConstraintName("parlamentar_fk");

                    b.Navigation("TipomandatoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Permissaoentidade", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Entidade", "EntidadeNavigation")
                        .WithMany("Permissaoentidades")
                        .HasForeignKey("Entidade")
                        .IsRequired()
                        .HasConstraintName("permissaoentidade_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Grupo", "GrupoNavigation")
                        .WithMany("Permissaoentidades")
                        .HasForeignKey("Grupo")
                        .IsRequired()
                        .HasConstraintName("permissaoentidade_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Sistema", "SistemaNavigation")
                        .WithMany("Permissaoentidades")
                        .HasForeignKey("Sistema")
                        .IsRequired()
                        .HasConstraintName("permissaoentidade_fk");

                    b.Navigation("EntidadeNavigation");

                    b.Navigation("GrupoNavigation");

                    b.Navigation("SistemaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Pessoa", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Endereco", "EnderecoNavigation")
                        .WithMany("Pessoas")
                        .HasForeignKey("Endereco")
                        .HasConstraintName("pessoa_fk");

                    b.Navigation("EnderecoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Prfage", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Prfages")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("prfage_fk");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projeto", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Analistum", "AnalistaNavigation")
                        .WithMany("ProjetoAnalistaNavigations")
                        .HasForeignKey("Analista")
                        .HasConstraintName("projeto_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Assunto1", "AssuntoNavigation")
                        .WithMany("ProjetoAssuntoNavigations")
                        .HasForeignKey("Assunto")
                        .HasConstraintName("projeto_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Assunto1", "AssuntoaltNavigation")
                        .WithMany("ProjetoAssuntoaltNavigations")
                        .HasForeignKey("Assuntoalt")
                        .HasConstraintName("projeto_fk8");

                    b.HasOne("AprovacaoDigital.Infrastructure.Atividade", "AtividadeNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("Atividade")
                        .HasConstraintName("projeto_fk4");

                    b.HasOne("AprovacaoDigital.Infrastructure.Codificacao", "CodificacaoNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("Codificacao")
                        .HasConstraintName("projeto_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Analistum", "FiscalNavigation")
                        .WithMany("ProjetoFiscalNavigations")
                        .HasForeignKey("Fiscal")
                        .HasConstraintName("projeto_fk7");

                    b.HasOne("AprovacaoDigital.Infrastructure.Natureza", "NaturezaNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("Natureza")
                        .HasConstraintName("projeto_fk3");

                    b.HasOne("AprovacaoDigital.Infrastructure.Prfage", "ProfissionalNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("Profissional")
                        .HasConstraintName("projeto_fk5");

                    b.HasOne("AprovacaoDigital.Infrastructure.Regiao", "RegiaoNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("Regiao")
                        .HasConstraintName("projeto_fk9");

                    b.HasOne("AprovacaoDigital.Infrastructure.Zoneamento", "ZoneamentoNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("Zoneamento")
                        .HasConstraintName("projeto_fk6");

                    b.Navigation("AnalistaNavigation");

                    b.Navigation("AssuntoNavigation");

                    b.Navigation("AssuntoaltNavigation");

                    b.Navigation("AtividadeNavigation");

                    b.Navigation("CodificacaoNavigation");

                    b.Navigation("FiscalNavigation");

                    b.Navigation("NaturezaNavigation");

                    b.Navigation("ProfissionalNavigation");

                    b.Navigation("RegiaoNavigation");

                    b.Navigation("ZoneamentoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projeto1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Assunto", "AssuntoNavigation")
                        .WithMany("Projeto1s")
                        .HasForeignKey("Assunto")
                        .IsRequired()
                        .HasConstraintName("projeto_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Status1", "StatusNavigation")
                        .WithMany("Projeto1s")
                        .HasForeignKey("Status")
                        .IsRequired()
                        .HasConstraintName("projeto_fk");

                    b.Navigation("AssuntoNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projetoana", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Analistum1", "AnalistaNavigation")
                        .WithMany("Projetoanas")
                        .HasForeignKey("Analista")
                        .HasConstraintName("projetoana_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Projeto1", "ProjetoNavigation")
                        .WithMany("Projetoanas")
                        .HasForeignKey("Projeto")
                        .HasConstraintName("projetoana_fk");

                    b.Navigation("AnalistaNavigation");

                    b.Navigation("ProjetoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projetoin", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Projeto1", "ProjetoNavigation")
                        .WithMany("Projetoins")
                        .HasForeignKey("Projeto")
                        .HasConstraintName("projetoins_fk");

                    b.Navigation("ProjetoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Proprietario", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Rua", "RuaNavigation")
                        .WithMany("Proprietarios")
                        .HasForeignKey("Rua")
                        .HasConstraintName("proprietario_fk");

                    b.Navigation("RuaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessa", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Analistum", "AnalistaNavigation")
                        .WithMany("Remessas")
                        .HasForeignKey("Analista")
                        .HasConstraintName("remessa_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Projeto", "ProjetoNavigation")
                        .WithMany("Remessas")
                        .HasForeignKey("Projeto")
                        .IsRequired()
                        .HasConstraintName("remessa_fk");

                    b.Navigation("AnalistaNavigation");

                    b.Navigation("ProjetoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessa1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Analistum1", "AnalistaNavigation")
                        .WithMany("Remessa1s")
                        .HasForeignKey("Analista")
                        .HasConstraintName("remessa_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Projeto1", "ProjetoNavigation")
                        .WithMany("Remessa1s")
                        .HasForeignKey("Projeto")
                        .IsRequired()
                        .HasConstraintName("remessa_fk");

                    b.Navigation("AnalistaNavigation");

                    b.Navigation("ProjetoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessaexigencium", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Exigencium", "ExigenciaNavigation")
                        .WithMany("Remessaexigencia")
                        .HasForeignKey("Exigencia")
                        .HasConstraintName("remessaexigencia_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Remessa", "RemessaNavigation")
                        .WithMany("Remessaexigencia")
                        .HasForeignKey("Remessa")
                        .IsRequired()
                        .HasConstraintName("remessaexigencia_fk");

                    b.Navigation("ExigenciaNavigation");

                    b.Navigation("RemessaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Requerimento", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Profissional1", "ProfissionalNavigation")
                        .WithMany("Requerimentos")
                        .HasForeignKey("Profissional")
                        .IsRequired()
                        .HasConstraintName("requerimento_fk");

                    b.Navigation("ProfissionalNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Classe", "ClasseNavigation")
                        .WithMany("Residuos")
                        .HasForeignKey("Classe")
                        .IsRequired()
                        .HasConstraintName("residuo_fk");

                    b.Navigation("ClasseNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuo1", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Armazenamento", "ArmazenamentoNavigation")
                        .WithMany("Residuo1s")
                        .HasForeignKey("Armazenamento")
                        .HasConstraintName("residuo_fk3");

                    b.HasOne("AprovacaoDigital.Infrastructure.Caracteristica", "CaracteristicaNavigation")
                        .WithMany("Residuo1s")
                        .HasForeignKey("Caracteristica")
                        .HasConstraintName("residuo_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Classificacao", "ClassificacaoNavigation")
                        .WithMany("Residuo1s")
                        .HasForeignKey("Classificacao")
                        .HasConstraintName("residuo_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Estadofisico", "EstadofisicoNavigation")
                        .WithMany("Residuo1s")
                        .HasForeignKey("Estadofisico")
                        .IsRequired()
                        .HasConstraintName("residuo_fk");

                    b.Navigation("ArmazenamentoNavigation");

                    b.Navigation("CaracteristicaNavigation");

                    b.Navigation("ClassificacaoNavigation");

                    b.Navigation("EstadofisicoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuoarea", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Areareceptora1", "AreareceptoraNavigation")
                        .WithMany("Residuoareas")
                        .HasForeignKey("Areareceptora")
                        .IsRequired()
                        .HasConstraintName("residuoarea_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Residuo1", "ResiduoNavigation")
                        .WithMany("Residuoareas")
                        .HasForeignKey("Residuo")
                        .IsRequired()
                        .HasConstraintName("residuoarea_fk");

                    b.Navigation("AreareceptoraNavigation");

                    b.Navigation("ResiduoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuocaracteristica", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Caracteristica", "CaracteristicaNavigation")
                        .WithMany("Residuocaracteristicas")
                        .HasForeignKey("Caracteristica")
                        .IsRequired()
                        .HasConstraintName("residuocaracteristica_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Residuo1", "ResiduoNavigation")
                        .WithMany("Residuocaracteristicas")
                        .HasForeignKey("Residuo")
                        .IsRequired()
                        .HasConstraintName("residuocaracteristica_fk");

                    b.Navigation("CaracteristicaNavigation");

                    b.Navigation("ResiduoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosAreareceptora", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosAreareceptoras")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fk311a9ab777f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosArmazenamento", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosArmazenamentos")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fkb943b68d77f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosCtr", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosCtrs")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fk3d7f4be077f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosCtrresiduo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosCtrresiduos")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("residuos_rev_fkey");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosEmpresa", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosEmpresas")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fkf12a12c877f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosEstadofisico", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosEstadofisicos")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fk8e9ca28c77f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosResiduo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosResiduos")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fk935a7bd477f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosTransportadora", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosTransportadoras")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fkdc11f3377f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.ResiduosUnidade", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Revinfo", "RevNavigation")
                        .WithMany("ResiduosUnidades")
                        .HasForeignKey("Rev")
                        .IsRequired()
                        .HasConstraintName("fk40d98ced77f68f91");

                    b.Navigation("RevNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Rua", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Bairro", "BairrofinalNavigation")
                        .WithMany("RuaBairrofinalNavigations")
                        .HasForeignKey("Bairrofinal")
                        .HasConstraintName("rua_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Bairro", "BairroinicialNavigation")
                        .WithMany("RuaBairroinicialNavigations")
                        .HasForeignKey("Bairroinicial")
                        .HasConstraintName("rua_fk1");

                    b.Navigation("BairrofinalNavigation");

                    b.Navigation("BairroinicialNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Sistema", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tema", "TemaNavigation")
                        .WithMany("Sistemas")
                        .HasForeignKey("Tema")
                        .IsRequired()
                        .HasConstraintName("tema_sistema_fk");

                    b.Navigation("TemaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Sistemacontexto", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Sistema", "SistemaNavigation")
                        .WithMany("Sistemacontextos")
                        .HasForeignKey("Sistema")
                        .HasConstraintName("sistemacontexto_fk");

                    b.Navigation("SistemaNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Transportadoraresiduo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Residuo1", "ResiduoNavigation")
                        .WithMany("Transportadoraresiduos")
                        .HasForeignKey("Residuo")
                        .HasConstraintName("fkda9472e3e4fc0580");

                    b.HasOne("AprovacaoDigital.Infrastructure.Transportadora", "TransportadoraNavigation")
                        .WithMany("Transportadoraresiduos")
                        .HasForeignKey("Transportadora")
                        .HasConstraintName("fkda9472e324a06d8e");

                    b.Navigation("ResiduoNavigation");

                    b.Navigation("TransportadoraNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Unidade", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Tipounidade", "TipounidadeNavigation")
                        .WithMany("Unidades")
                        .HasForeignKey("Tipounidade")
                        .HasConstraintName("unidade_fk");

                    b.Navigation("TipounidadeNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Unidadeusuario", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Grupousuario", "GrupousuarioNavigation")
                        .WithMany("Unidadeusuarios")
                        .HasForeignKey("Grupousuario")
                        .HasConstraintName("unidadeusuario_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Unidade", "UnidadeNavigation")
                        .WithMany("Unidadeusuarios")
                        .HasForeignKey("Unidade")
                        .HasConstraintName("unidadeusuario_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Unidadeusuarios")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("unidadeusuario_fk1");

                    b.Navigation("GrupousuarioNavigation");

                    b.Navigation("UnidadeNavigation");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Usuariocargo", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Usuariocargos")
                        .HasForeignKey("Usuario")
                        .IsRequired()
                        .HasConstraintName("usuariocargo_fk");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Usuariosistema", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Sistema", "SistemaNavigation")
                        .WithMany("Usuariosistemas")
                        .HasForeignKey("Sistema")
                        .IsRequired()
                        .HasConstraintName("sistema_usuariosistema_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Tema", "TemaNavigation")
                        .WithMany("Usuariosistemas")
                        .HasForeignKey("Tema")
                        .HasConstraintName("tema_usuariosistema_fk");

                    b.HasOne("AprovacaoDigital.Infrastructure.Usuario", "UsuarioNavigation")
                        .WithMany("Usuariosistemas")
                        .HasForeignKey("Usuario")
                        .IsRequired()
                        .HasConstraintName("usuario_usuariosistema_fk");

                    b.Navigation("SistemaNavigation");

                    b.Navigation("TemaNavigation");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Valorcoluna", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Controleresiduo", "ControleresiduoNavigation")
                        .WithMany("Valorcolunas")
                        .HasForeignKey("Controleresiduo")
                        .IsRequired()
                        .HasConstraintName("valorcoluna_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Destinofinal", "DestinofinalNavigation")
                        .WithMany("Valorcolunas")
                        .HasForeignKey("Destinofinal")
                        .HasConstraintName("valorcoluna_fk2");

                    b.HasOne("AprovacaoDigital.Infrastructure.Residuo", "ResiduoNavigation")
                        .WithMany("Valorcolunas")
                        .HasForeignKey("Residuo")
                        .IsRequired()
                        .HasConstraintName("valorcoluna_fk");

                    b.Navigation("ControleresiduoNavigation");

                    b.Navigation("DestinofinalNavigation");

                    b.Navigation("ResiduoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Veiculodivulgacao", b =>
                {
                    b.HasOne("AprovacaoDigital.Infrastructure.Ocorrencium", "OcorrenciaNavigation")
                        .WithMany("Veiculodivulgacaos")
                        .HasForeignKey("Ocorrencia")
                        .HasConstraintName("veiculodivulgacao_fk1");

                    b.HasOne("AprovacaoDigital.Infrastructure.Tipoveiculodivulgacao", "TipoveiculodivulgacaoNavigation")
                        .WithMany("Veiculodivulgacaos")
                        .HasForeignKey("Tipoveiculodivulgacao")
                        .IsRequired()
                        .HasConstraintName("veiculodivulgacao_fk");

                    b.Navigation("OcorrenciaNavigation");

                    b.Navigation("TipoveiculodivulgacaoNavigation");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Analistum", b =>
                {
                    b.Navigation("Analiseprojetos");

                    b.Navigation("ProjetoAnalistaNavigations");

                    b.Navigation("ProjetoFiscalNavigations");

                    b.Navigation("Remessas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Analistum1", b =>
                {
                    b.Navigation("Projetoanas");

                    b.Navigation("Remessa1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Areareceptora", b =>
                {
                    b.Navigation("Ctrs");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Areareceptora1", b =>
                {
                    b.Navigation("Ctr1Areareceptora2Navigations");

                    b.Navigation("Ctr1AreareceptoraNavigations");

                    b.Navigation("Residuoareas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Armazenamento", b =>
                {
                    b.Navigation("Ctr1s");

                    b.Navigation("Empresaresiduos");

                    b.Navigation("Residuo1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo", b =>
                {
                    b.Navigation("Arquivousuarios");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo1", b =>
                {
                    b.Navigation("Documento1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Arquivo2", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Assunto", b =>
                {
                    b.Navigation("Projeto1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Assunto1", b =>
                {
                    b.Navigation("ProjetoAssuntoNavigations");

                    b.Navigation("ProjetoAssuntoaltNavigations");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Atividade", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Bairro", b =>
                {
                    b.Navigation("RuaBairrofinalNavigations");

                    b.Navigation("RuaBairroinicialNavigations");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Bairro1", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Caracteristica", b =>
                {
                    b.Navigation("Residuo1s");

                    b.Navigation("Residuocaracteristicas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Caracteristicaemp", b =>
                {
                    b.Navigation("Controleresiduos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Classe", b =>
                {
                    b.Navigation("Residuos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Classificacao", b =>
                {
                    b.Navigation("Residuo1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Classificacao1", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Codificacao", b =>
                {
                    b.Navigation("Analiseprojetos");

                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Contratado", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Controleresiduo", b =>
                {
                    b.Navigation("Valorcolunas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ctr1", b =>
                {
                    b.Navigation("Ctrresiduos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Destinofinal", b =>
                {
                    b.Navigation("Valorcolunas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Empresa2", b =>
                {
                    b.Navigation("Areareceptora1s");

                    b.Navigation("Ctr1s");

                    b.Navigation("Empresaresiduos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Endereco", b =>
                {
                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Entidade", b =>
                {
                    b.Navigation("Permissaoentidades");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Estadofisico", b =>
                {
                    b.Navigation("Residuo1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Evento", b =>
                {
                    b.Navigation("Obraeventos");

                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Exigencium", b =>
                {
                    b.Navigation("Remessaexigencia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Faseobra", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Fiscal", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Fonterecurso", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Grupo", b =>
                {
                    b.Navigation("Grupousuarios");

                    b.Navigation("Modulogrupos");

                    b.Navigation("Permissaoentidades");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Grupousuario", b =>
                {
                    b.Navigation("Unidadeusuarios");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ministerio", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulo", b =>
                {
                    b.Navigation("Modulosistemas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Modulosistema", b =>
                {
                    b.Navigation("Arquivos");

                    b.Navigation("Modulogrupos");

                    b.Navigation("Modulosistemausuarios");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Natureza", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Obra", b =>
                {
                    b.Navigation("Obraandamentos");

                    b.Navigation("Obradata");

                    b.Navigation("Obraeventos");

                    b.Navigation("Obraparlamentars");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Ocorrencium", b =>
                {
                    b.Navigation("Veiculodivulgacaos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Parlamentar", b =>
                {
                    b.Navigation("Obraparlamentars");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Prfage", b =>
                {
                    b.Navigation("Controleresiduo");

                    b.Navigation("Ctrs");

                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Profissional1", b =>
                {
                    b.Navigation("Requerimentos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projeto", b =>
                {
                    b.Navigation("Analiseprojetos");

                    b.Navigation("Historicos");

                    b.Navigation("Remessas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Projeto1", b =>
                {
                    b.Navigation("Projetoanas");

                    b.Navigation("Projetoins");

                    b.Navigation("Remessa1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Recurso", b =>
                {
                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Regiao", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Regiaourbana", b =>
                {
                    b.Navigation("Bairro1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Regiaourbana1", b =>
                {
                    b.Navigation("Bairros");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessa", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Remessaexigencia");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Remessa1", b =>
                {
                    b.Navigation("Documento1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuo", b =>
                {
                    b.Navigation("Nomecolunas");

                    b.Navigation("Valorcolunas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Residuo1", b =>
                {
                    b.Navigation("Residuoareas");

                    b.Navigation("Residuocaracteristicas");

                    b.Navigation("Transportadoraresiduos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Revinfo", b =>
                {
                    b.Navigation("ResiduosAreareceptoras");

                    b.Navigation("ResiduosArmazenamentos");

                    b.Navigation("ResiduosCtrresiduos");

                    b.Navigation("ResiduosCtrs");

                    b.Navigation("ResiduosEmpresas");

                    b.Navigation("ResiduosEstadofisicos");

                    b.Navigation("ResiduosResiduos");

                    b.Navigation("ResiduosTransportadoras");

                    b.Navigation("ResiduosUnidades");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Rua", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Proprietarios");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Sistema", b =>
                {
                    b.Navigation("Grupousuarios");

                    b.Navigation("Logacessos");

                    b.Navigation("Logsistemas");

                    b.Navigation("Modulosistemas");

                    b.Navigation("Permissaoentidades");

                    b.Navigation("Sistemacontextos");

                    b.Navigation("Usuariosistemas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Situacao", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Situacao1", b =>
                {
                    b.Navigation("Documento1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Status", b =>
                {
                    b.Navigation("Controleresiduos");

                    b.Navigation("Ctrs");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Status1", b =>
                {
                    b.Navigation("Projeto1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Status2", b =>
                {
                    b.Navigation("Obradata");

                    b.Navigation("Obras");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tema", b =>
                {
                    b.Navigation("Sistemas");

                    b.Navigation("Usuariosistemas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipoarquivo", b =>
                {
                    b.Navigation("Arquivo1s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipoarquivo1", b =>
                {
                    b.Navigation("Arquivo2s");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipocontrole", b =>
                {
                    b.Navigation("Obradata");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipomandato", b =>
                {
                    b.Navigation("Parlamentars");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipounidade", b =>
                {
                    b.Navigation("Unidades");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Tipoveiculodivulgacao", b =>
                {
                    b.Navigation("Certidaoconformidades");

                    b.Navigation("Certidaos");

                    b.Navigation("Extratos");

                    b.Navigation("Veiculodivulgacaos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Transportador", b =>
                {
                    b.Navigation("Ctrs");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Transportadora", b =>
                {
                    b.Navigation("Areareceptora1s");

                    b.Navigation("Ctr1s");

                    b.Navigation("Transportadoraresiduos");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Unidade", b =>
                {
                    b.Navigation("Unidadeusuarios");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Unidade1", b =>
                {
                    b.Navigation("Ctr1s");

                    b.Navigation("CtrresiduoUnidadeNavigations");

                    b.Navigation("CtrresiduoUnidadetransNavigations");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Usuario", b =>
                {
                    b.Navigation("Arquivousuarios");

                    b.Navigation("Grupousuarios");

                    b.Navigation("Logacessos");

                    b.Navigation("Modulosistemausuarios");

                    b.Navigation("Prfages");

                    b.Navigation("Unidadeusuarios");

                    b.Navigation("Usuariocargos");

                    b.Navigation("Usuariosistemas");
                });

            modelBuilder.Entity("AprovacaoDigital.Infrastructure.Zoneamento", b =>
                {
                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
